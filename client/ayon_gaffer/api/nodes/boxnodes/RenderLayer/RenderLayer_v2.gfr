import Gaffer
import GafferArnold
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath
import ayon_gaffer.api.nodes.render_layer

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 7, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["RenderLayer"] = ayon_gaffer.api.nodes.render_layer.RenderLayerNode( "RenderLayer" )
parent.addChild( __children["RenderLayer"] )
__children["RenderLayer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["RenderLayer"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["RenderLayer"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "compression", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "half_precision", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "tiled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "autocrop", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.ContextVariables( "ContextVariables_scene_vars" ) )
__children["RenderLayer"]["ContextVariables_scene_vars"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["ContextVariables_scene_vars"]["variables"].addChild( Gaffer.NameValuePlug( "layer_name", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_scene_vars"]["variables"].addChild( Gaffer.NameValuePlug( "layer_type", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_type", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_scene_vars"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldRender( "arnold_render" ) )
__children["RenderLayer"]["arnold_render"]["user"].addChild( Gaffer.StringPlug( "getElement", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["arnold_render"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferDispatch.FrameMask( "FrameMask4" ) )
__children["RenderLayer"]["FrameMask4"]["user"].addChild( Gaffer.StringPlug( "custom_frames", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FrameMask4"]["user"].addChild( Gaffer.StringPlug( "frame_range", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FrameMask4"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FrameMask4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "FRAME_RANGES" ) )
__children["RenderLayer"]["FRAME_RANGES"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"]["__in"].addChild( Gaffer.StringPlug( "p2", defaultValue = 'full_range', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"]["__in"].addChild( Gaffer.IntPlug( "p3", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"]["__in"].addChild( Gaffer.IntPlug( "p4", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["FRAME_RANGES"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "custom_frames", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageReader( "ImageReader_Aovs" ) )
__children["RenderLayer"]["ImageReader_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.CollectImages( "CollectImages_Aovs" ) )
__children["RenderLayer"]["CollectImages_Aovs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "COLLECT_PATHS" ) )
__children["RenderLayer"]["COLLECT_PATHS"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_PATHS"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_PATHS"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["COLLECT_PATHS"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.Shuffle( "Shuffle_beautyToRGBA" ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.DeleteChannels( "DeleteChannels_beauty" ) )
__children["RenderLayer"]["DeleteChannels_beauty"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageWriter( "ImageWriterBeauty" ) )
__children["RenderLayer"]["ImageWriterBeauty"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ImageWriterBeauty"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ImageWriterBeauty"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Backdrop( "Backdrop1" ) )
__children["RenderLayer"]["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "Switch" ) )
__children["RenderLayer"]["Switch"].setup( GafferImage.ImagePlug( "in", ) )
__children["RenderLayer"]["Switch"]["in"].addChild( GafferImage.ImagePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageWriter( "ImageWriterCrypto" ) )
__children["RenderLayer"]["ImageWriterCrypto"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ImageWriterCrypto"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageReader( "deep_read" ) )
__children["RenderLayer"]["deep_read"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.DeepTidy( "DeepTidy" ) )
__children["RenderLayer"]["DeepTidy"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageWriter( "ImageWriterDeep" ) )
__children["RenderLayer"]["ImageWriterDeep"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ImageWriterDeep"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.DeleteChannels( "DeleteChannels" ) )
__children["RenderLayer"]["DeleteChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "COLLECT_PATHS_" ) )
__children["RenderLayer"]["COLLECT_PATHS_"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_PATHS_"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_PATHS_"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_PATHS_"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["COLLECT_PATHS_"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "prune_filter" ) )
__children["RenderLayer"]["prune_filter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["prune_filter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "shadowCast" ) )
__children["RenderLayer"]["shadowCast"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderAssignment( "Shader" ) )
__children["RenderLayer"]["Shader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardAttributes( "shadow_light" ) )
__children["RenderLayer"]["shadow_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Backdrop( "Backdrop63" ) )
__children["RenderLayer"]["Backdrop63"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop63"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Backdrop( "Backdrop64" ) )
__children["RenderLayer"]["Backdrop64"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop64"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "RENDER_LAYER_TYPE_SWITCH" ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Backdrop( "Backdrop65" ) )
__children["RenderLayer"]["Backdrop65"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop65"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "prune_objects", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "matte_shadow", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot" ) )
__children["RenderLayer"]["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot75" ) )
__children["RenderLayer"]["Dot75"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot75"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot76" ) )
__children["RenderLayer"]["Dot76"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot76"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot77" ) )
__children["RenderLayer"]["Dot77"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot77"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.Prune( "HIDE_OBJECTS" ) )
__children["RenderLayer"]["HIDE_OBJECTS"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot79" ) )
__children["RenderLayer"]["Dot79"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot79"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "OCC" ) )
__children["RenderLayer"]["OCC"].loadShader( "ambient_occlusion" )
__children["RenderLayer"]["OCC"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "ShadowMatte" ) )
__children["RenderLayer"]["ShadowMatte"].loadShader( "shadow_matte" )
__children["RenderLayer"]["ShadowMatte"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "shadow_catcher" ) )
__children["RenderLayer"]["shadow_catcher"].loadShader( "composite" )
__children["RenderLayer"]["shadow_catcher"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot80" ) )
__children["RenderLayer"]["Dot80"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot80"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "cam_vis_off_filter" ) )
__children["RenderLayer"]["cam_vis_off_filter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["cam_vis_off_filter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "matte_filter" ) )
__children["RenderLayer"]["matte_filter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["matte_filter"].addChild( Gaffer.BoolPlug( "__uiOutputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAttributes( "self_shadow_off" ) )
__children["RenderLayer"]["self_shadow_off"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAttributes( "MATTE_OBJECTS" ) )
__children["RenderLayer"]["MATTE_OBJECTS"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAttributes( "CAMERA_VISIBILITY_OFF" ) )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "linkedLights", Gaffer.StringPlug( "value", defaultValue = '', ), False, "shadow_lights", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( GafferScene.Outputs( "allInteractiveOutputs" ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output8", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output9", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output10", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output11", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output12", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output13", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output14", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output15", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output16", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output17", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output18", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output19", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output20", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output21", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output22", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output23", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output24", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output25", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output26", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output27", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output28", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output29", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output30", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output31", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output32", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output33", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output34", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output35", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output36", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output37", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output38", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output39", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output40", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output41", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output42", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output43", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output44", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output45", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output46", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output47", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output48", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output49", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output50", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output51", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output52", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output53", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output54", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output55", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output56", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output57", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output58", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output59", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output60", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output61", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output62", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output63", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output64", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output65", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output66", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output67", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output68", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output69", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output70", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output71", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output72", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output73", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output74", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output75", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output76", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output77", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output78", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output79", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output80", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output81", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output82", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output83", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output84", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output85", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output86", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output87", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output88", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output89", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output90", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output91", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output92", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output93", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output94", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output95", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output96", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output97", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output98", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output99", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output100", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output101", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output102", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output103", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output104", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output105", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output106", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output107", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output108", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output109", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output110", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output111", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output112", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output113", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output114", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output115", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output116", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output117", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output118", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output119", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output120", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output121", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output122", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output123", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output124", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output125", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output126", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output127", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output128", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output129", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output130", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output131", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output132", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output133", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output134", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output135", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output136", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output137", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output138", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output139", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output140", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output141", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output142", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output143", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output144", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output145", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output146", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output147", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output148", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output149", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output150", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output151", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output152", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output153", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output154", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output155", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output156", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output157", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output158", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output159", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allInteractiveOutputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.DeleteOutputs( "DeleteOutputsBatch" ) )
__children["RenderLayer"]["DeleteOutputsBatch"]["user"].addChild( Gaffer.StringVectorDataPlug( "aovs", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["DeleteOutputsBatch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.DeleteOutputs( "DeleteOutputsInteractive" ) )
__children["RenderLayer"]["DeleteOutputsInteractive"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "UI_AOV_DISPLAY_HELPER" ) )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p1", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "user_allAovs", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "user_aovs", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "beauty", Gaffer.StringPlug( "value", defaultValue = 'xx', ), False, "beauty_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "beauty_indirects", Gaffer.StringPlug( "value", defaultValue = 'xx', ), False, "beauty_indirects_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "COLLECT_AOV_LISTS" ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p2", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p3", defaultValue = 'xx', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p4", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p5", defaultValue = 'xx', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p6", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p7", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p8", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p9", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p10", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p11", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p12", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p13", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p14", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p15", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p16", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p17", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p18", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p19", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p20", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p21", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.BoolPlug( "p22", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"].addChild( Gaffer.StringPlug( "p23", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["COLLECT_AOV_LISTS"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "id_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "id_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "utility_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "utility_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "lightGroups_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "lightGroups_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "lightGroupsIndirect_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "lightGroupsIndirect_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "custom", Gaffer.StringPlug( "value", defaultValue = '', ), False, "custom_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "uv_SHR" ) )
__children["RenderLayer"]["uv_SHR"].loadShader( "utility" )
__children["RenderLayer"]["uv_SHR"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAOVShader( "UV_AOV_shader" ) )
__children["RenderLayer"]["UV_AOV_shader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "aov_write_UV" ) )
__children["RenderLayer"]["aov_write_UV"].loadShader( "aov_write_rgb" )
__children["RenderLayer"]["aov_write_UV"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAOVShader( "cryptomatte_AOV_shader" ) )
__children["RenderLayer"]["cryptomatte_AOV_shader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "MotionVector" ) )
__children["RenderLayer"]["MotionVector"].loadShader( "motion_vector" )
__children["RenderLayer"]["MotionVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["motion_vector_time_expression"] = Gaffer.Expression( "motion_vector_time_expression" )
__children["RenderLayer"].addChild( __children["RenderLayer"]["motion_vector_time_expression"] )
__children["RenderLayer"].addChild( GafferArnold.ArnoldAOVShader( "motionvectors_AOV_shader" ) )
__children["RenderLayer"]["motionvectors_AOV_shader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "aov_write_motion_vector" ) )
__children["RenderLayer"]["aov_write_motion_vector"].loadShader( "aov_write_rgb" )
__children["RenderLayer"]["aov_write_motion_vector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "background_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "background_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "denoise_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "denoise_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "emission_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "emission_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "volume_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "volume_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "deep_aovExp", Gaffer.StringPlug( "value", defaultValue = '', ), False, "deep_aovExp", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "includeShadowMatte" ) )
__children["RenderLayer"]["includeShadowMatte"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["includeShadowMatte"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["includeShadowMatte"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["includeShadowMatte"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot81" ) )
__children["RenderLayer"]["Dot81"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot81"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "layer_type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Backdrop( "Backdrop" ) )
__children["RenderLayer"]["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot84" ) )
__children["RenderLayer"]["Dot84"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["Dot84"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.ContextVariables( "ContextVariables_render_vars" ) )
__children["RenderLayer"]["ContextVariables_render_vars"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["ContextVariables_render_vars"]["user"].addChild( Gaffer.StringPlug( "renderType", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ContextVariables_render_vars"]["variables"].addChild( Gaffer.NameValuePlug( "layer_type", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_type", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_render_vars"]["variables"].addChild( Gaffer.NameValuePlug( "layer_name", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_render_vars"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot85" ) )
__children["RenderLayer"]["Dot85"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot85"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "shadowMatteVis", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["RenderLayer"]["BoxOut"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferDispatch.TaskNode.TaskPlug( "out_render", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxOut( "BoxOut1" ) )
__children["RenderLayer"]["BoxOut1"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.FloatPlug( "FilterWidth", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "fiter_type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "altFilter", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot86" ) )
__children["RenderLayer"]["Dot86"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["Dot86"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "SwitchWriteDeep" ) )
__children["RenderLayer"]["SwitchWriteDeep"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["SwitchWriteDeep"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SwitchWriteDeep"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SwitchWriteDeep"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "preserve_layer_name", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldImager( "ArnoldImager2" ) )
__children["RenderLayer"]["ArnoldImager2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "ImagerDenoiserOidn1" ) )
__children["RenderLayer"]["ImagerDenoiserOidn1"].loadShader( "imager_denoiser_oidn" )
__children["RenderLayer"]["ImagerDenoiserOidn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "enable_denoiser", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression1" ) )
__children["RenderLayer"]["Expression1"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression1"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "SwitchWriteCrypto" ) )
__children["RenderLayer"]["SwitchWriteCrypto"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["SwitchWriteCrypto"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SwitchWriteCrypto"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SwitchWriteCrypto"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardAttributes( "disable_lights" ) )
__children["RenderLayer"]["disable_lights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["RenderLayer"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["RenderLayer"]["BoxIn1"].setup( GafferScene.ShaderPlug( "out", ) )
__children["RenderLayer"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderPlug( "utility_shader_A", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "Utility_A_PathFilter" ) )
__children["RenderLayer"]["Utility_A_PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "paths", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["RenderLayer"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["RenderLayer"]["BoxIn2"].setup( GafferScene.ShaderPlug( "out", ) )
__children["RenderLayer"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "Utility_B_PathFilter" ) )
__children["RenderLayer"]["Utility_B_PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderPlug( "utility_shader_B", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "paths1", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment2" ) )
__children["RenderLayer"]["ShaderAssignment2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoxIn( "BoxIn3" ) )
__children["RenderLayer"]["BoxIn3"].setup( GafferScene.ShaderPlug( "out", ) )
__children["RenderLayer"]["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "Utility_C_PathFilter" ) )
__children["RenderLayer"]["Utility_C_PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderPlug( "utility_shader_C", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "paths2", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot87" ) )
__children["RenderLayer"]["Dot87"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot87"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "ShadowMatte1" ) )
__children["RenderLayer"]["ShadowMatte1"].loadShader( "shadow_matte" )
__children["RenderLayer"]["ShadowMatte1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment3" ) )
__children["RenderLayer"]["ShaderAssignment3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot88" ) )
__children["RenderLayer"]["Dot88"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot88"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "Switch1" ) )
__children["RenderLayer"]["Switch1"].setup( Gaffer.Plug( "in", ) )
__children["RenderLayer"]["Switch1"]["in"].addChild( Gaffer.Plug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch1"]["in"].addChild( Gaffer.Plug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "ImagerDenoiserNoice" ) )
__children["RenderLayer"]["ImagerDenoiserNoice"].loadShader( "imager_denoiser_noice" )
__children["RenderLayer"]["ImagerDenoiserNoice"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.IntPlug( "denoiser_type", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldOptions( "ArnoldOptions" ) )
__children["RenderLayer"]["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "ai:enable_progressive_render", Gaffer.BoolPlug( "value", defaultValue = True, ), False, "options_enableProgressiveRender", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.NameValuePlug( "ai:progressive_min_AA_samples", Gaffer.IntPlug( "value", defaultValue = -4, minValue = -10, maxValue = 0, ), False, "options_progressiveMinAASamples", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "indirect_specular_enable", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "indirect_diffuse_enable", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "matte_objects", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "cam_vis_off", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardAttributes( "DISABLE_OBJECTS" ) )
__children["RenderLayer"]["DISABLE_OBJECTS"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["RenderLayer"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardAttributes( "CAMERA_VISIBILITY_ON" ) )
__children["RenderLayer"]["CAMERA_VISIBILITY_ON"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["RenderLayer"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringVectorDataPlug( "add_objects_to_layer", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardAttributes( "use_lights" ) )
__children["RenderLayer"]["use_lights"]["user"].addChild( Gaffer.StringPlug( "use_lights", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["use_lights"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "Switch3" ) )
__children["RenderLayer"]["Switch3"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Switch3"]["user"].addChild( Gaffer.BoolPlug( "use_lights", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch3"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch3"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression2" ) )
__children["RenderLayer"]["Expression2"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression2"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "user_use_lights", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression3" ) )
__children["RenderLayer"]["Expression3"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression3"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "user_lights_to_use", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.Prune( "prune_misc_grp" ) )
__children["RenderLayer"]["prune_misc_grp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["RenderLayer"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot89" ) )
__children["RenderLayer"]["Dot89"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot89"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.CollectImages( "CollectImagesDeep" ) )
__children["RenderLayer"]["CollectImagesDeep"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferArnold.ArnoldShader( "Cryptomatte" ) )
__children["RenderLayer"]["Cryptomatte"].loadShader( "cryptomatte" )
__children["RenderLayer"]["Cryptomatte"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression4" ) )
__children["RenderLayer"]["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "subPixelMerge", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "use_RGB_Opacity", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "Alpha_Half_Precision", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.FloatPlug( "Alpha_Tolerance", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "Depth_Half_Precision", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.FloatPlug( "Depth_Tolerance", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "Filter", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.StringPlug( "Filter_Width", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardOptions( "StandardOptions" ) )
__children["RenderLayer"]["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.FloatPlug( "options_resolutionMultiplier_value", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageReader( "ImageReaderCryptoMaterial" ) )
__children["RenderLayer"]["ImageReaderCryptoMaterial"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageReader( "ImageReaderCryptoAsset" ) )
__children["RenderLayer"]["ImageReaderCryptoAsset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.Merge( "Merge" ) )
__children["RenderLayer"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageReader( "ImageReaderCryptoObject" ) )
__children["RenderLayer"]["ImageReaderCryptoObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.CopyImageMetadata( "CopyImageMetadata" ) )
__children["RenderLayer"]["CopyImageMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.CopyImageMetadata( "CopyImageMetadata1" ) )
__children["RenderLayer"]["CopyImageMetadata1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.CopyImageMetadata( "CopyImageMetadata2" ) )
__children["RenderLayer"]["CopyImageMetadata2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot90" ) )
__children["RenderLayer"]["Dot90"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot90"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "bypassAOVs" ) )
__children["RenderLayer"]["bypassAOVs"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["bypassAOVs"]["user"].addChild( Gaffer.IntPlug( "IntPlug", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["bypassAOVs"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["bypassAOVs"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["bypassAOVs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.StandardOptions( "half_res" ) )
__children["RenderLayer"]["half_res"]["user"].addChild( Gaffer.BoolPlug( "shadow_half_res", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["half_res"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression7" ) )
__children["RenderLayer"]["Expression7"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression7"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "shadow_half_res", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "Switch5" ) )
__children["RenderLayer"]["Switch5"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Switch5"]["user"].addChild( Gaffer.BoolPlug( "autoAddObjects", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch5"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch5"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Switch5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot91" ) )
__children["RenderLayer"]["Dot91"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot91"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression8" ) )
__children["RenderLayer"]["Expression8"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression8"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "user_autoAddObjects", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot92" ) )
__children["RenderLayer"]["Dot92"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot92"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.IntPlug( "index", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Expression( "Expression" ) )
__children["RenderLayer"]["Expression"]["__in"].addChild( Gaffer.CompoundObjectPlug( "p0", defaultValue = IECore.CompoundObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["Expression"]["__out"].addChild( Gaffer.IntPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Dot( "Dot93" ) )
__children["RenderLayer"]["Dot93"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["Dot93"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferImage.ImageWriter( "ImageWriterBeautySlap" ) )
__children["RenderLayer"]["ImageWriterBeautySlap"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ImageWriterBeautySlap"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Box( "SLAP" ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Backdrop( "Backdrop58" ) )
__children["RenderLayer"]["SLAP"]["Backdrop58"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Backdrop58"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Merge( "Merge" ) )
__children["RenderLayer"]["SLAP"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ColorSpace( "ColorSpace_acescg_to_acescct" ) )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.LUT( "LUT_view" ) )
__children["RenderLayer"]["SLAP"]["LUT_view"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ColorSpace( "ColorSpace_acescct_to_acescg" ) )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Backdrop( "Backdrop56" ) )
__children["RenderLayer"]["SLAP"]["Backdrop56"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Backdrop56"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Backdrop( "Backdrop57" ) )
__children["RenderLayer"]["SLAP"]["Backdrop57"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Backdrop57"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImageReader( "roto" ) )
__children["RenderLayer"]["SLAP"]["roto"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Grade( "lift_blacks" ) )
__children["RenderLayer"]["SLAP"]["lift_blacks"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Premultiply( "Premultiply" ) )
__children["RenderLayer"]["SLAP"]["Premultiply"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Unpremultiply( "Unpremultiply" ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Shuffle( "Shuffle" ) )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.CopyChannels( "CopyChannels" ) )
__children["RenderLayer"]["SLAP"]["CopyChannels"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["CopyChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImageReader( "bg1" ) )
__children["RenderLayer"]["SLAP"]["bg1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Resize( "Resize2" ) )
__children["RenderLayer"]["SLAP"]["Resize2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Premultiply( "Premultiply1" ) )
__children["RenderLayer"]["SLAP"]["Premultiply1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Backdrop( "Backdrop59" ) )
__children["RenderLayer"]["SLAP"]["Backdrop59"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Backdrop59"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Backdrop( "Backdrop60" ) )
__children["RenderLayer"]["SLAP"]["Backdrop60"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Backdrop60"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImageReader( "bg" ) )
__children["RenderLayer"]["SLAP"]["bg"]["user"].addChild( Gaffer.StringPlug( "connect_to_spreadsheet", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["bg"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.LUT( "GRADE" ) )
__children["RenderLayer"]["SLAP"]["GRADE"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Resize( "Resize_HD" ) )
__children["RenderLayer"]["SLAP"]["Resize_HD"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Resize( "Resize3" ) )
__children["RenderLayer"]["SLAP"]["Resize3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Expression( "Expression_FIND_CUBE" ) )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["RenderLayer"]["SLAP"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["RenderLayer"]["SLAP"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.IntPlug( "index", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.BoxOut( "BoxOut1" ) )
__children["RenderLayer"]["SLAP"]["BoxOut1"].setup( GafferImage.ImagePlug( "in", ) )
__children["RenderLayer"]["SLAP"]["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImagePlug( "out_roto", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Shuffle( "R" ) )
__children["RenderLayer"]["SLAP"]["R"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["R"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["R"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["R"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["R"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Shuffle( "G" ) )
__children["RenderLayer"]["SLAP"]["G"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["G"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["G"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["G"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["G"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Shuffle( "B" ) )
__children["RenderLayer"]["SLAP"]["B"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["B"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["B"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["B"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["B"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Merge( "Merge1" ) )
__children["RenderLayer"]["SLAP"]["Merge1"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Merge1"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Merge1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Unpremultiply( "Unpremultiply4" ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Unpremultiply( "Unpremultiply5" ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Unpremultiply( "Unpremultiply6" ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.Resize( "Resize_HD1" ) )
__children["RenderLayer"]["SLAP"]["Resize_HD1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Switch( "Switch1" ) )
__children["RenderLayer"]["SLAP"]["Switch1"].setup( GafferImage.ImagePlug( "in", ) )
__children["RenderLayer"]["SLAP"]["Switch1"]["in"].addChild( GafferImage.ImagePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Switch1"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"]["Switch1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Dot( "Dot1" ) )
__children["RenderLayer"]["SLAP"]["Dot1"].setup( GafferImage.ImagePlug( "in", ) )
__children["RenderLayer"]["SLAP"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.ContextVariables( "Shot_Variables" ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member4", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member5", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member7", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member8", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member9", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member10", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member11", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member12", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( Gaffer.Expression( "Expression" ) )
__children["RenderLayer"]["SLAP"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["RenderLayer"]["SLAP"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["SLAP"].addChild( GafferImage.ImageReader( "beauty_aov_image1" ) )
__children["RenderLayer"]["SLAP"]["beauty_aov_image1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.Switch( "write_Slap_Frames" ) )
__children["RenderLayer"]["write_Slap_Frames"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["write_Slap_Frames"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["write_Slap_Frames"]["in"].addChild( GafferDispatch.TaskNode.TaskPlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["write_Slap_Frames"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "options_renderResolution_enabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferDispatch.PythonCommand( "createFolder" ) )
__children["RenderLayer"]["createFolder"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["createFolder"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["createFolder"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.Outputs( "Outputs" ) )
__children["RenderLayer"]["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferScene.Outputs( "allBatchOutputs" ) )
__children["RenderLayer"]["allBatchOutputs"]["user"].addChild( Gaffer.StringVectorDataPlug( "allAovs", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["user"].addChild( Gaffer.StringPlug( "attrConnectToLayerMenu", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output8", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output9", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output10", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output11", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output12", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output13", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output14", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output15", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output16", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output17", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output18", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output19", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output20", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output21", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output22", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output23", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output24", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output25", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output26", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'motionvector', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'closest', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output27", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output28", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output29", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output30", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output31", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output32", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output33", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output34", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output35", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output36", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output37", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output38", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output39", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output40", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output41", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output42", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output43", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output47", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output48", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output49", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output50", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output51", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output52", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output53", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output54", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output55", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output56", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output57", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output58", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output59", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output60", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output61", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output62", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output63", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output64", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output65", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output66", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output67", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output68", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output69", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output70", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output71", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output72", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output73", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output74", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output75", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output76", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output77", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output78", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output79", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output80", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output81", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output82", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output83", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output84", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output85", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output86", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output87", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output88", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output89", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output90", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output91", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output92", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output93", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output94", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output95", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output96", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output97", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output98", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output99", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output100", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output101", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output102", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output103", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output104", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output105", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output106", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output107", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output108", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output109", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output110", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output111", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output112", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output113", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output114", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output115", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output116", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output117", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output118", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output119", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output120", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output121", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output122", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output123", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output124", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output125", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output126", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output127", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output128", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output129", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output130", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output131", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output132", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output133", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output134", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output135", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output136", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output137", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output138", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output139", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output140", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output141", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "layerName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output142", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member4", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member7", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member8", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member9", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member10", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output143", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output144", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output145", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "preserve_layer_name", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "preserve_layer_name", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "filterwidth", Gaffer.FloatPlug( "value", defaultValue = 1.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filterwidth", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "tiled", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "tiled", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "multipart", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "multipart", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "half_precision", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "half_precision", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "autocrop", Gaffer.BoolPlug( "value", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "autocrop", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "filter", Gaffer.StringPlug( "value", defaultValue = 'gaussian', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "filter", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"].addChild( Gaffer.NameValuePlug( "compression", Gaffer.StringPlug( "value", defaultValue = 'zips', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "compression", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["allBatchOutputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.BoolPlug( "multipart", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.ContextVariables( "ContextVariables_scene_path" ) )
__children["RenderLayer"]["ContextVariables_scene_path"].setup( GafferScene.ScenePlug( "in", ) )
__children["RenderLayer"]["ContextVariables_scene_path"]["variables"].addChild( Gaffer.NameValuePlug( "layer_output_path", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_output_path", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_scene_path"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( Gaffer.ContextVariables( "ContextVariables_render_path" ) )
__children["RenderLayer"]["ContextVariables_render_path"].setup( GafferDispatch.TaskNode.TaskPlug( "in", ) )
__children["RenderLayer"]["ContextVariables_render_path"]["user"].addChild( Gaffer.StringPlug( "renderType", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["ContextVariables_render_path"]["variables"].addChild( Gaffer.NameValuePlug( "layer_output_path", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "layer_output_path", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["RenderLayer"]["ContextVariables_render_path"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"].addChild( GafferDispatch.TaskList( "PublishTasklist" ) )
__children["RenderLayer"]["PublishTasklist"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["PublishTasklist"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'nodeGadget:color', imath.Color3f( 0.500000006, 0.253999999, 0.253999999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'layout:section:Utility_Settings:summary', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'icon', 'AYON_icon_dev.png' )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'defaulticon', 'AYON_icon_dev.png' )
Gaffer.Metadata.registerValue( __children["RenderLayer"], 'annotation:user:text', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user"], 'layout:section', 'User' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user"], 'nodule:type', '' )
__children["RenderLayer"]["layer_name"].setValue( 'Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_name"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_name"], 'layout:index', 0 )
__children["RenderLayer"]["layer_output_path"].setValue( '${project:rootDirectory}/render/${script:name}/${render:shot}/${layer_name}' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["outputs"], 'layout:section', 'Outputs' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["outputs"], 'layout:index', 16 )
__children["RenderLayer"]["cleanup_paths"].setValue( IECore.StringVectorData( [ '${layer_output_path}/aovs' ] ) )
__children["RenderLayer"]["__uiPosition"].setValue( imath.V2f( 128.748871, 6.14171219 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["__uiPosition"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["__uiPosition"], 'nodule:type', '' )
__children["RenderLayer"]["BoxIn"]["__in"].setInput( __children["RenderLayer"]["in"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 421.89978, 204.475906 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["in"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enabled"], 'layout:index', 65 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enabled"], 'nodule:type', '' )
__children["RenderLayer"]["compression"].setValue( 'zip' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:none', 'none' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:RLE', 'rle' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:Zip Scanline', 'zips' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:Zip', 'zip' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:Piz', 'piz' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:PXR24', 'pxr24' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:B44', 'b44' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:B44A', 'b44a' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:DWAA', 'dwaa' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'preset:DWAB', 'dwab' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'layout:index', 21 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'label', 'Compression' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["compression"], 'description', 'Specify the type of compression used.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'layout:index', 22 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'label', 'half_precision' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_precision"], 'description', 'Specify whether 16-bit floating-point (binary16) is used (as opposed to full 32-bit precision). This provides a sufficient degree of precision in many cases while keeping data usage down.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'layout:index', 23 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'label', 'tiled' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["tiled"], 'description', 'Allows you to save the file in scanline or tiled mode. Scanline may work better with composition packages like Nuke or Fusion. If tiled is off the whole image buffer size will be allocated all at once for all the AOVs present in the scene. If enabled, Arnold will save the buckets as they are rendered, which reduces memory taken up by image buffers.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'layout:index', 25 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'label', 'autocrop' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["autocrop"], 'description', 'Autocrop removes pixels where alpha and all other channels are zero. It contains a bounding box around the content of the image, which informs a compositing application which part of the image needs to be identified and which part can be skipped. This is particularly useful when you have a CG element that is not filling the whole frame (see image below). Only a small part of the image will be processed in the compositing application. Therefore it will only load the data window and skip the rest.\n\n' )
__children["RenderLayer"]["ContextVariables_scene_vars"]["variables"]["layer_name"]["value"].setValue( 'Layer' )
__children["RenderLayer"]["ContextVariables_scene_vars"]["variables"]["layer_type"]["value"].setValue( 'Beauty' )
__children["RenderLayer"]["ContextVariables_scene_vars"]["in"].setInput( __children["RenderLayer"]["ContextVariables_scene_path"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_scene_vars"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_scene_vars"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["ContextVariables_scene_vars"]["__uiPosition"].setValue( imath.V2f( 312.565643, -132.926041 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["arnold_render"]["user"]["getElement"], 'nodule:type', '' )
__children["RenderLayer"]["arnold_render"]["in"].setInput( __children["RenderLayer"]["ContextVariables_scene_vars"]["out"] )
__children["RenderLayer"]["arnold_render"]["fileName"].setValue( '${project:rootDirectory}/asses/${script:name}/${script:name}.####.ass' )
__children["RenderLayer"]["arnold_render"]["__uiPosition"].setValue( imath.V2f( 258.340057, -141.090103 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["RenderLayer"]["FrameMask4"]["user"]["custom_frames"].setInput( __children["RenderLayer"]["custom_frames"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["custom_frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["custom_frames"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["custom_frames"], 'layout:index', 3 )
__children["RenderLayer"]["FrameMask4"]["user"]["frame_range"].setInput( __children["RenderLayer"]["frame_range"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["frame_range"], 'preset:layer_range', 'layer_range' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["frame_range"], 'preset:timeline', 'timeline' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["frame_range"], 'preset:first_last', 'first_last' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["frame_range"], 'preset:custom', 'custom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'preset:layer_range', 'layer_range' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'preset:timeline', 'timeline' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'preset:first_last', 'first_last' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'preset:custom', 'custom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"], 'layout:index', 2 )
__children["RenderLayer"]["FrameMask4"]["preTasks"][0].setInput( __children["RenderLayer"]["write_Slap_Frames"]["out"] )
__children["RenderLayer"]["FrameMask4"]["mask"].setInput( __children["RenderLayer"]["FRAME_RANGES"]["__out"]["p0"] )
__children["RenderLayer"]["FrameMask4"]["__uiPosition"].setValue( imath.V2f( 290.220551, -380.861023 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FRAME_RANGES"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["FRAME_RANGES"]["__in"]["p0"].setInput( __children["RenderLayer"]["FrameMask4"]["user"]["frame_range"] )
__children["RenderLayer"]["FRAME_RANGES"]["__in"]["p1"].setInput( __children["RenderLayer"]["custom_frames"] )
__children["RenderLayer"]["FRAME_RANGES"]["__in"]["p2"].setInput( __children["RenderLayer"]["frame_range"] )
__children["RenderLayer"]["FRAME_RANGES"]["__in"]["p3"].setInput( __children["RenderLayer"]["layer_range"]["x"] )
__children["RenderLayer"]["FRAME_RANGES"]["__in"]["p4"].setInput( __children["RenderLayer"]["layer_range"]["y"] )
__children["RenderLayer"]["FRAME_RANGES"]["__uiPosition"].setValue( imath.V2f( 305.618744, -370.457001 ) )
__children["RenderLayer"]["custom_frames"].setValue( '1001-1030' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'divider', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'label', 'Custom Frames' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_frames"], 'description', '- Use the following pattern to render consecutive frames: <startFrame - endFrame> "1001-1100"\n\n- Use the following pattern to render individual frames: <frame, frame, frame...> "1001, 1020, 1045"\n\n- Mix of patetrns is allowed: <frameRange + frame + frame + frameRange + frame> 1001-1010 1023, 1045 1050-1055' )
__children["RenderLayer"]["ImageReader_Aovs"]["fileName"].setInput( __children["RenderLayer"]["COLLECT_PATHS"]["__out"]["p1"] )
__children["RenderLayer"]["ImageReader_Aovs"]["refreshCount"].setValue( 880 )
__children["RenderLayer"]["ImageReader_Aovs"]["__uiPosition"].setValue( imath.V2f( 277.229736, -161.044312 ) )
__children["RenderLayer"]["CollectImages_Aovs"]["in"].setInput( __children["RenderLayer"]["ImageReader_Aovs"]["out"] )
__children["RenderLayer"]["CollectImages_Aovs"]["rootLayers"].setInput( __children["RenderLayer"]["COLLECT_PATHS"]["__out"]["p0"] )
__children["RenderLayer"]["CollectImages_Aovs"]["layerVariable"].setValue( 'collect:aov' )
__children["RenderLayer"]["CollectImages_Aovs"]["__uiPosition"].setValue( imath.V2f( 277.229736, -171.12207 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS"], 'noduleLayout:customGadget:addButtonRight:visible', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["COLLECT_PATHS"]["__in"]["p0"].setInput( __children["RenderLayer"]["arnold_render"]["out"]["globals"] )
__children["RenderLayer"]["COLLECT_PATHS"]["__uiPosition"].setValue( imath.V2f( 240.313446, -159.544006 ) )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["in"].setInput( __children["RenderLayer"]["CollectImages_Aovs"]["out"] )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel"]["out"].setValue( 'R' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel"]["in"].setValue( 'beauty.R' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel1"]["in"].setValue( 'beauty.G' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel2"]["in"].setValue( 'beauty.B' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["channels"]["channel3"]["in"].setValue( 'beauty.A' )
__children["RenderLayer"]["Shuffle_beautyToRGBA"]["__uiPosition"].setValue( imath.V2f( 296.252655, -179.286133 ) )
__children["RenderLayer"]["DeleteChannels_beauty"]["in"].setInput( __children["RenderLayer"]["Shuffle_beautyToRGBA"]["out"] )
__children["RenderLayer"]["DeleteChannels_beauty"]["channels"].setValue( 'beauty.[RGBA]' )
__children["RenderLayer"]["DeleteChannels_beauty"]["__uiPosition"].setValue( imath.V2f( 296.252655, -184.950195 ) )
__children["RenderLayer"]["ImageWriterBeauty"]["preTasks"][0].setInput( __children["RenderLayer"]["Dot84"]["out"] )
__children["RenderLayer"]["ImageWriterBeauty"]["in"].setInput( __children["RenderLayer"]["Switch"]["out"] )
__children["RenderLayer"]["ImageWriterBeauty"]["fileName"].setValue( '${layer_output_path}/${layer_name}_${layer_type}.####.exr' )
__children["RenderLayer"]["ImageWriterBeauty"]["openexr"]["mode"].setValue( 0 )
__children["RenderLayer"]["ImageWriterBeauty"]["openexr"]["compression"].setValue( 'zip' )
__children["RenderLayer"]["ImageWriterBeauty"]["openexr"]["dataType"].setValue( 'float' )
__children["RenderLayer"]["ImageWriterBeauty"]["__uiPosition"].setValue( imath.V2f( 278.029724, -204.143341 ) )
__children["RenderLayer"]["Backdrop1"]["title"].setValue( 'MERGE BEAUTY AOV' )
__children["RenderLayer"]["Backdrop1"]["description"].setValue( 'Read Outputs aovs ' )
__children["RenderLayer"]["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.69915771, -54.6930084 ), imath.V2f( 36.1488342, 9.86790466 ) ) )
__children["RenderLayer"]["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 275.177063, -156.639435 ) )
__children["RenderLayer"]["Switch"]["index"].setValue( 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["Switch"]["in"][0].setInput( __children["RenderLayer"]["CollectImages_Aovs"]["out"] )
__children["RenderLayer"]["Switch"]["in"][1].setInput( __children["RenderLayer"]["DeleteChannels_beauty"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Switch"]["__uiPosition"].setValue( imath.V2f( 280.229736, -193.114258 ) )
__children["RenderLayer"]["ImageWriterCrypto"]["preTasks"][0].setInput( __children["RenderLayer"]["Dot86"]["out"] )
__children["RenderLayer"]["ImageWriterCrypto"]["in"].setInput( __children["RenderLayer"]["CopyImageMetadata1"]["out"] )
__children["RenderLayer"]["ImageWriterCrypto"]["fileName"].setValue( '${layer_output_path}/${layer_name}_${layer_type}_crypto.####.exr' )
__children["RenderLayer"]["ImageWriterCrypto"]["openexr"]["mode"].setValue( 0 )
__children["RenderLayer"]["ImageWriterCrypto"]["openexr"]["compression"].setValue( 'zip' )
__children["RenderLayer"]["ImageWriterCrypto"]["openexr"]["dataType"].setValue( 'float' )
__children["RenderLayer"]["ImageWriterCrypto"]["__uiPosition"].setValue( imath.V2f( 289.844635, -270.68515 ) )
__children["RenderLayer"]["deep_read"]["fileName"].setInput( __children["RenderLayer"]["COLLECT_PATHS_"]["__out"]["p2"] )
__children["RenderLayer"]["deep_read"]["__uiPosition"].setValue( imath.V2f( 312.349548, -278.432495 ) )
__children["RenderLayer"]["DeepTidy"]["in"].setInput( __children["RenderLayer"]["CollectImagesDeep"]["out"] )
__children["RenderLayer"]["DeepTidy"]["__uiPosition"].setValue( imath.V2f( 312.349548, -291.173431 ) )
__children["RenderLayer"]["ImageWriterDeep"]["preTasks"][0].setInput( __children["RenderLayer"]["SwitchWriteCrypto"]["out"] )
__children["RenderLayer"]["ImageWriterDeep"]["in"].setInput( __children["RenderLayer"]["DeleteChannels"]["out"] )
__children["RenderLayer"]["ImageWriterDeep"]["fileName"].setValue( '${layer_output_path}/${layer_name}_${layer_type}_deep.####.exr' )
__children["RenderLayer"]["ImageWriterDeep"]["openexr"]["compression"].setValue( 'zip' )
__children["RenderLayer"]["ImageWriterDeep"]["openexr"]["dataType"].setValue( 'float' )
__children["RenderLayer"]["ImageWriterDeep"]["openexr"]["depthDataType"].setValue( '' )
__children["RenderLayer"]["ImageWriterDeep"]["__uiPosition"].setValue( imath.V2f( 310.149536, -305.001373 ) )
__children["RenderLayer"]["DeleteChannels"]["in"].setInput( __children["RenderLayer"]["DeepTidy"]["out"] )
__children["RenderLayer"]["DeleteChannels"]["channels"].setValue( '[RGB]' )
__children["RenderLayer"]["DeleteChannels"]["__uiPosition"].setValue( imath.V2f( 312.349548, -296.837494 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_PATHS_"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["COLLECT_PATHS_"]["__in"]["p0"].setInput( __children["RenderLayer"]["arnold_render"]["out"]["globals"] )
__children["RenderLayer"]["COLLECT_PATHS_"]["__uiPosition"].setValue( imath.V2f( 248.7108, -237.412491 ) )
__children["RenderLayer"]["prune_filter"]["paths"].setInput( __children["RenderLayer"]["prune_objects"] )
__children["RenderLayer"]["prune_filter"]["__uiPosition"].setValue( imath.V2f( 310.296356, 163.840454 ) )
__children["RenderLayer"]["prune_filter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["RenderLayer"]["shadowCast"]["paths"].setInput( __children["RenderLayer"]["matte_shadow"] )
__children["RenderLayer"]["shadowCast"]["__uiPosition"].setValue( imath.V2f( 333.294891, 151.163742 ) )
__children["RenderLayer"]["Shader"]["in"].setInput( __children["RenderLayer"]["shadow_light"]["out"] )
__children["RenderLayer"]["Shader"]["filter"].setInput( __children["RenderLayer"]["shadowCast"]["out"] )
__children["RenderLayer"]["Shader"]["shader"].setInput( __children["RenderLayer"]["shadow_catcher"]["out"] )
__children["RenderLayer"]["Shader"]["__uiPosition"].setValue( imath.V2f( 300.417664, 43.9685707 ) )
__children["RenderLayer"]["shadow_light"]["in"].setInput( __children["RenderLayer"]["Dot80"]["out"] )
__children["RenderLayer"]["shadow_light"]["attributes"]["linkedLights"].setInput( __children["RenderLayer"]["shadow_lights"] )
__children["RenderLayer"]["shadow_light"]["__uiPosition"].setValue( imath.V2f( 300.134277, 72.5236359 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Backdrop63"], 'nodeGadget:color', imath.Color3f( 0.500499964, 0.586299956, 0.714999974 ) )
__children["RenderLayer"]["Backdrop63"]["title"].setValue( 'beauty' )
__children["RenderLayer"]["Backdrop63"]["__uiPosition"].setValue( imath.V2f( 251.880585, 64.7372131 ) )
__children["RenderLayer"]["Backdrop63"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -37.859436, -35.0924606 ), imath.V2f( 6.3911438, 22.3171844 ) ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Backdrop64"], 'nodeGadget:color', imath.Color3f( 0.424489766, 0.519999981, 0.424489796 ) )
__children["RenderLayer"]["Backdrop64"]["title"].setValue( '          shadow' )
__children["RenderLayer"]["Backdrop64"]["__uiPosition"].setValue( imath.V2f( 300.91748, 56.7441902 ) )
__children["RenderLayer"]["Backdrop64"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -38.2396851, -27.076416 ), imath.V2f( 28.2645569, 30.4604034 ) ) )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["index"].setInput( __children["RenderLayer"]["Expression1"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"][0].setInput( __children["RenderLayer"]["Dot75"]["out"] )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"][1].setInput( __children["RenderLayer"]["Dot87"]["out"] )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["in"][2].setInput( __children["RenderLayer"]["Dot76"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["__uiPosition"].setValue( imath.V2f( 301.607361, 17.6653709 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Backdrop65"], 'nodeGadget:color', imath.Color3f( 0.42926532, 0.426201224, 0.259705514 ) )
__children["RenderLayer"]["Backdrop65"]["title"].setValue( 'utility' )
__children["RenderLayer"]["Backdrop65"]["__uiPosition"].setValue( imath.V2f( 339.708618, 75.0805511 ) )
__children["RenderLayer"]["Backdrop65"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.55722046, -62.5560074 ), imath.V2f( 35.745636, 12.1215363 ) ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'description', 'Objects to be removed from the Hierarchy View (outliner)\n\n\t' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["prune_objects"], 'label', 'Object Prune' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'description', 'Objects to receive shadows for shadow layer type.\n\n\t-objects will have shadow cast and self shadow set to OFF.\n\nIn order to assign the shader to the shape use the following pattern: "/.../*"\n\n\tExample:\n\n\t"/scene_grp/environment_grp/.../*"\n' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'label', 'Matte Shadow Obj' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_shadow"], 'divider', False )
__children["RenderLayer"]["Dot"]["in"].setInput( __children["RenderLayer"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Dot"]["__uiPosition"].setValue( imath.V2f( 300.134277, 196.975906 ) )
__children["RenderLayer"]["Dot75"]["in"].setInput( __children["RenderLayer"]["includeShadowMatte"]["out"] )
__children["RenderLayer"]["Dot75"]["__uiPosition"].setValue( imath.V2f( 233.334335, 24.9974022 ) )
__children["RenderLayer"]["Dot76"]["in"].setInput( __children["RenderLayer"]["ShaderAssignment2"]["out"] )
__children["RenderLayer"]["Dot76"]["__uiPosition"].setValue( imath.V2f( 354.340027, 24.9974022 ) )
__children["RenderLayer"]["Dot77"]["in"].setInput( __children["RenderLayer"]["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot77"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot77"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Dot77"]["__uiPosition"].setValue( imath.V2f( 421.89978, -169.235092 ) )
__children["RenderLayer"]["HIDE_OBJECTS"]["in"].setInput( __children["RenderLayer"]["Switch5"]["out"] )
__children["RenderLayer"]["HIDE_OBJECTS"]["filter"].setInput( __children["RenderLayer"]["prune_filter"]["out"] )
__children["RenderLayer"]["HIDE_OBJECTS"]["__uiPosition"].setValue( imath.V2f( 300.134277, 158.99173 ) )
__children["RenderLayer"]["Dot79"]["in"].setInput( __children["RenderLayer"]["Dot80"]["out"] )
__children["RenderLayer"]["Dot79"]["__uiPosition"].setValue( imath.V2f( 354.7211, 76.8617554 ) )
__children["RenderLayer"]["OCC"]["parameters"]["black"].setValue( imath.Color3f( 0, 1, 0 ) )
__children["RenderLayer"]["OCC"]["parameters"]["white"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["RenderLayer"]["OCC"]["__uiPosition"].setValue( imath.V2f( 273.291168, 67.0881805 ) )
__children["RenderLayer"]["ShadowMatte"]["parameters"]["shadow_color"].setValue( imath.Color3f( 1, 0, 0 ) )
__children["RenderLayer"]["ShadowMatte"]["__uiPosition"].setValue( imath.V2f( 269.63324, 57.3221321 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_catcher"]["parameters"]["A"], 'compoundNumericNodule:childrenVisible', True )
__children["RenderLayer"]["shadow_catcher"]["parameters"]["A"]["r"].setInput( __children["RenderLayer"]["OCC"]["out"]["r"] )
__children["RenderLayer"]["shadow_catcher"]["parameters"]["A"]["g"].setInput( __children["RenderLayer"]["OCC"]["out"]["g"] )
__children["RenderLayer"]["shadow_catcher"]["parameters"]["A"]["b"].setInput( __children["RenderLayer"]["OCC"]["out"]["b"] )
__children["RenderLayer"]["shadow_catcher"]["parameters"]["B"].setInput( __children["RenderLayer"]["ShadowMatte"]["out"] )
__children["RenderLayer"]["shadow_catcher"]["parameters"]["operation"].setValue( 'plus' )
__children["RenderLayer"]["shadow_catcher"]["__uiPosition"].setValue( imath.V2f( 284.929871, 61.3066368 ) )
__children["RenderLayer"]["Dot80"]["in"].setInput( __children["RenderLayer"]["MATTE_OBJECTS"]["out"] )
__children["RenderLayer"]["Dot80"]["__uiPosition"].setValue( imath.V2f( 300.134277, 83.3617401 ) )
__children["RenderLayer"]["cam_vis_off_filter"]["paths"].setInput( __children["RenderLayer"]["cam_vis_off"] )
__children["RenderLayer"]["cam_vis_off_filter"]["__uiPosition"].setValue( imath.V2f( 313.342957, 141.887161 ) )
__children["RenderLayer"]["cam_vis_off_filter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["RenderLayer"]["matte_filter"]["paths"].setInput( __children["RenderLayer"]["matte_objects"] )
__children["RenderLayer"]["matte_filter"]["__uiPosition"].setValue( imath.V2f( 309.846283, 128.37088 ) )
__children["RenderLayer"]["matte_filter"]["__uiOutputConnectionsMinimised"].setValue( True )
__children["RenderLayer"]["self_shadow_off"]["in"].setInput( __children["RenderLayer"]["HIDE_OBJECTS"]["out"] )
__children["RenderLayer"]["self_shadow_off"]["filter"].setInput( __children["RenderLayer"]["shadowCast"]["out"] )
__children["RenderLayer"]["self_shadow_off"]["attributes"]["shadowVisibility"]["value"].setValue( False )
__children["RenderLayer"]["self_shadow_off"]["attributes"]["shadowVisibility"]["enabled"].setValue( True )
__children["RenderLayer"]["self_shadow_off"]["attributes"]["selfShadows"]["value"].setValue( False )
__children["RenderLayer"]["self_shadow_off"]["attributes"]["selfShadows"]["enabled"].setValue( True )
__children["RenderLayer"]["self_shadow_off"]["__uiPosition"].setValue( imath.V2f( 300.134277, 147.437897 ) )
__children["RenderLayer"]["MATTE_OBJECTS"]["in"].setInput( __children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["out"] )
__children["RenderLayer"]["MATTE_OBJECTS"]["filter"].setInput( __children["RenderLayer"]["matte_filter"]["out"] )
__children["RenderLayer"]["MATTE_OBJECTS"]["attributes"]["matte"]["value"].setValue( True )
__children["RenderLayer"]["MATTE_OBJECTS"]["attributes"]["matte"]["enabled"].setValue( True )
__children["RenderLayer"]["MATTE_OBJECTS"]["__uiPosition"].setValue( imath.V2f( 300.134277, 123.834152 ) )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["in"].setInput( __children["RenderLayer"]["self_shadow_off"]["out"] )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["filter"].setInput( __children["RenderLayer"]["cam_vis_off_filter"]["out"] )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["attributes"]["cameraVisibility"]["value"].setValue( False )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["attributes"]["cameraVisibility"]["enabled"].setValue( True )
__children["RenderLayer"]["CAMERA_VISIBILITY_OFF"]["__uiPosition"].setValue( imath.V2f( 300.134277, 136.134567 ) )
__children["RenderLayer"]["shadow_lights"]["value"].setValue( '*' )
__children["RenderLayer"]["shadow_lights"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'spreadsheet:columnName', 'linkedLights' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'description', 'Lights to be used for shadow casting in shadow layer\n\n\t- By default all lights are used "*"\n\n\t- Copy full path for specific ligths: "/light_rig_grp/key_light_LG03"\n\n\t- To add more than one light use space separation: /light_rig_grp/key_light_LG03 /light_rig_grp/rim_light_LG04\n\n\t\t' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'label', 'Shadow Light (shadow pass)' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'deletable', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'layout:index', 12 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"]["value"], 'ui:scene:acceptsSetExpression', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"]["value"], 'spreadsheet:columnName', 'linkedLightsValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_lights"]["enabled"], 'spreadsheet:columnName', 'linkedLightsEnabled' )
__children["RenderLayer"]["allInteractiveOutputs"]["in"].setInput( __children["RenderLayer"]["Dot90"]["out"] )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Arnold/Beauty' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["name"].setValue( 'Interactive/Arnold/Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["fileName"].setValue( 'direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output2"]["data"].setValue( 'color direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["name"].setValue( 'Interactive/Arnold/Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["fileName"].setValue( 'indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output3"]["data"].setValue( 'color indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["name"].setValue( 'Interactive/Arnold/Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["fileName"].setValue( 'albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output4"]["data"].setValue( 'color albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["name"].setValue( 'Interactive/Arnold/Diffuse' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["fileName"].setValue( 'diffuse' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output5"]["data"].setValue( 'color diffuse' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["name"].setValue( 'Interactive/Arnold/Specular' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["fileName"].setValue( 'specular' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output6"]["data"].setValue( 'color specular' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["name"].setValue( 'Interactive/Arnold/Coat' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["fileName"].setValue( 'coat' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output7"]["data"].setValue( 'color coat' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["name"].setValue( 'Interactive/Arnold/Sheen' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["fileName"].setValue( 'sheen' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output8"]["data"].setValue( 'color sheen' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["name"].setValue( 'Interactive/Arnold/Transmission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["fileName"].setValue( 'transmission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output9"]["data"].setValue( 'color transmission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["name"].setValue( 'Interactive/Arnold/Sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["fileName"].setValue( 'sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output10"]["data"].setValue( 'color sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["name"].setValue( 'Interactive/Arnold/Volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["fileName"].setValue( 'volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output11"]["data"].setValue( 'color volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["name"].setValue( 'Interactive/Arnold/LG01' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["fileName"].setValue( 'LG01' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output12"]["data"].setValue( "lpe C.*[<L.'LG01'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["name"].setValue( 'Interactive/Arnold/LG02' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["fileName"].setValue( 'LG02' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output13"]["data"].setValue( "lpe C.*[<L.'LG02'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["name"].setValue( 'Interactive/Arnold/LG03' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["fileName"].setValue( 'LG03' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output14"]["data"].setValue( "lpe C.*[<L.'LG03'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["name"].setValue( 'Interactive/Arnold/LG04' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["fileName"].setValue( 'LG04' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output15"]["data"].setValue( "lpe C.*[<L.'LG04'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["name"].setValue( 'Interactive/Arnold/LG05' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["fileName"].setValue( 'LG05' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output16"]["data"].setValue( "lpe C.*[<L.'LG05'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["name"].setValue( 'Interactive/Arnold/LG06' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["fileName"].setValue( 'LG06' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output17"]["data"].setValue( "lpe C.*[<L.'LG06'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["name"].setValue( 'Interactive/Arnold/LG07' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["fileName"].setValue( 'LG07' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output18"]["data"].setValue( "lpe C.*[<L.'LG07'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["name"].setValue( 'Interactive/Arnold/LG08' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["fileName"].setValue( 'LG08' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output19"]["data"].setValue( "lpe C.*[<L.'LG08'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["name"].setValue( 'Interactive/Arnold/LG09' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["fileName"].setValue( 'LG09' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output20"]["data"].setValue( "lpe C.*[<L.'LG09'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["name"].setValue( 'Interactive/Arnold/LG10' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["fileName"].setValue( 'LG10' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output21"]["data"].setValue( "lpe C.*[<L.'LG10'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["name"].setValue( 'Interactive/Arnold/LG_default' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["fileName"].setValue( 'LG_default' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output22"]["data"].setValue( "lpe C.*[<L.'LG_default'>V]" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["name"].setValue( 'Interactive/Arnold/Background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["fileName"].setValue( 'background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output23"]["data"].setValue( 'color background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["name"].setValue( 'Interactive/Arnold/emission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["fileName"].setValue( 'emission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output24"]["data"].setValue( 'color emission' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["name"].setValue( 'Interactive/Arnold/emission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["fileName"].setValue( 'emission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output25"]["data"].setValue( 'color emission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["name"].setValue( 'Interactive/Arnold/Motionvector' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["fileName"].setValue( 'motionvector' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output26"]["data"].setValue( 'color motionvector' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["name"].setValue( 'Interactive/Arnold/Shadow_Matte' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["fileName"].setValue( 'shadow_matte' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output27"]["data"].setValue( 'color shadow_matte' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["name"].setValue( 'Interactive/Arnold/Background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["fileName"].setValue( 'background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output28"]["data"].setValue( 'color background' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["name"].setValue( 'Interactive/Arnold/Shadow' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["fileName"].setValue( 'shadow' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output29"]["data"].setValue( 'color shadow' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["name"].setValue( 'Interactive/Arnold/Shadow_Diff' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["fileName"].setValue( 'shadow_diff' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output30"]["data"].setValue( 'color shadow_diff' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["name"].setValue( 'Interactive/Arnold/Shadow_Mask' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["fileName"].setValue( 'shadow_mask' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output31"]["data"].setValue( 'color shadow_mask' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["name"].setValue( 'Interactive/Arnold/ID01' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["fileName"].setValue( 'ID01' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output32"]["data"].setValue( 'color ID01' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["name"].setValue( 'Interactive/Arnold/ID02' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["fileName"].setValue( 'ID02' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output33"]["data"].setValue( 'color ID02' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["name"].setValue( 'Interactive/Arnold/ID03' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["fileName"].setValue( 'ID03' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output34"]["data"].setValue( 'color ID03' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["name"].setValue( 'Interactive/Arnold/ID04' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["fileName"].setValue( 'ID04' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output35"]["data"].setValue( 'color ID04' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["name"].setValue( 'Interactive/Arnold/ID05' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["fileName"].setValue( 'ID05' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output36"]["data"].setValue( 'color ID05' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["name"].setValue( 'Interactive/Arnold/ID06' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["fileName"].setValue( 'ID06' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output37"]["data"].setValue( 'color ID06' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["name"].setValue( 'Interactive/Arnold/ID07' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["fileName"].setValue( 'ID07' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output38"]["data"].setValue( 'color ID07' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["name"].setValue( 'Interactive/Arnold/ID08' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["fileName"].setValue( 'ID08' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output39"]["data"].setValue( 'color ID08' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["name"].setValue( 'Interactive/Arnold/N' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["fileName"].setValue( 'N' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output40"]["data"].setValue( 'color N' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["name"].setValue( 'Interactive/Arnold/P' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["fileName"].setValue( 'P' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output41"]["data"].setValue( 'color P' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["name"].setValue( 'Interactive/Arnold/Z' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["fileName"].setValue( 'Z' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output42"]["data"].setValue( 'color Z' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["name"].setValue( 'Interactive/Arnold/UV' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["fileName"].setValue( 'UV' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output43"]["data"].setValue( 'color UV' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["name"].setValue( 'Interactive/Arnold/crypto_material' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["fileName"].setValue( 'crypto_material' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output44"]["data"].setValue( 'color crypto_material' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["name"].setValue( 'Interactive/Arnold/crypto_object' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["fileName"].setValue( 'crypto_object' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output45"]["data"].setValue( 'color crypto_object' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["name"].setValue( 'Interactive/Arnold/crypto_asset' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["fileName"].setValue( 'crypto_asset' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output46"]["data"].setValue( 'color crypto_asset' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["name"].setValue( 'Interactive/Arnold/motionvectors' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["fileName"].setValue( 'motionvectors' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output47"]["data"].setValue( 'color motionvectors' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["name"].setValue( 'Interactive/Arnold/Denoise_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["fileName"].setValue( 'denoise_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output48"]["data"].setValue( 'color denoise_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["name"].setValue( 'Interactive/Arnold/Denoise_Albedo_Surfaces' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["fileName"].setValue( 'denoise_albedo_surfaces' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output49"]["data"].setValue( 'lpe ((C<TD>A)|(CA)|(C<RD>A))' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["name"].setValue( 'Interactive/Arnold/Denoise_Albedo_Noisy' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["fileName"].setValue( 'denoise_albedo_noisy' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output50"]["data"].setValue( "lpe ((C[DV]A)|(C<RS[^'coat''sheen']>A)|(C<TS[^'coat''sheen']>+DA))" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["name"].setValue( 'Interactive/Arnold/Pref' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["fileName"].setValue( 'Pref' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output51"]["data"].setValue( 'Pref vector' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["name"].setValue( 'Interactive/Arnold/Raycount' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["fileName"].setValue( 'raycount' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output52"]["data"].setValue( 'raycount float' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["name"].setValue( 'Interactive/Arnold/Nlights' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["fileName"].setValue( 'nlights' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output53"]["data"].setValue( 'color nlights' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["name"].setValue( 'Interactive/Arnold/Cputime' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["fileName"].setValue( 'cputime' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output54"]["data"].setValue( 'cputime float' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["name"].setValue( 'Interactive/Arnold/LG01_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["fileName"].setValue( 'LG01_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output55"]["data"].setValue( "lpe C<RS><L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["name"].setValue( 'Interactive/Arnold/LG01_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["fileName"].setValue( 'LG01_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output56"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["name"].setValue( 'Interactive/Arnold/LG01_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["fileName"].setValue( 'LG01_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output57"]["data"].setValue( "lpe C<RD><L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["name"].setValue( 'Interactive/Arnold/LG01_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["fileName"].setValue( 'LG01_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output58"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["name"].setValue( 'Interactive/Arnold/LG01_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["fileName"].setValue( 'LG01_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output59"]["data"].setValue( "lpe C<TD>.*<L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["name"].setValue( 'Interactive/Arnold/LG01_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["fileName"].setValue( 'LG01_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output60"]["data"].setValue( "lpe CV.*<L.'LG01'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["name"].setValue( 'Interactive/Arnold/LG02_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["fileName"].setValue( 'LG02_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output61"]["data"].setValue( "lpe C<RS><L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["name"].setValue( 'Interactive/Arnold/LG02_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["fileName"].setValue( 'LG02_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output62"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["name"].setValue( 'Interactive/Arnold/LG02_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["fileName"].setValue( 'LG02_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output63"]["data"].setValue( "lpe C<RD><L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["name"].setValue( 'Interactive/Arnold/LG02_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["fileName"].setValue( 'LG02_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output64"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["name"].setValue( 'Interactive/Arnold/LG02_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["fileName"].setValue( 'LG02_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output65"]["data"].setValue( "lpe C<TD>.*<L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["name"].setValue( 'Interactive/Arnold/LG02_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["fileName"].setValue( 'LG02_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output66"]["data"].setValue( "lpe CV.*<L.'LG02'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["name"].setValue( 'Interactive/Arnold/LG03_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["fileName"].setValue( 'LG03_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output67"]["data"].setValue( "lpe C<RS><L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["name"].setValue( 'Interactive/Arnold/LG03_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["fileName"].setValue( 'LG03_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output68"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["name"].setValue( 'Interactive/Arnold/LG03_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["fileName"].setValue( 'LG03_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output69"]["data"].setValue( "lpe C<RD><L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["name"].setValue( 'Interactive/Arnold/LG03_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["fileName"].setValue( 'LG03_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output70"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["name"].setValue( 'Interactive/Arnold/LG03_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["fileName"].setValue( 'LG03_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output71"]["data"].setValue( "lpe C<TD>.*<L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["name"].setValue( 'Interactive/Arnold/LG03_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["fileName"].setValue( 'LG03_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output72"]["data"].setValue( "lpe CV.*<L.'LG03'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["name"].setValue( 'Interactive/Arnold/LG04_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["fileName"].setValue( 'LG04_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output73"]["data"].setValue( "lpe C<RS><L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["name"].setValue( 'Interactive/Arnold/LG04_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["fileName"].setValue( 'LG04_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output74"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["name"].setValue( 'Interactive/Arnold/LG04_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["fileName"].setValue( 'LG04_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output75"]["data"].setValue( "lpe C<RD><L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["name"].setValue( 'Interactive/Arnold/LG04_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["fileName"].setValue( 'LG04_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output76"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["name"].setValue( 'Interactive/Arnold/LG04_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["fileName"].setValue( 'LG04_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output77"]["data"].setValue( "lpe C<TD>.*<L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["name"].setValue( 'Interactive/Arnold/LG04_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["fileName"].setValue( 'LG04_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output78"]["data"].setValue( "lpe CV.*<L.'LG04'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["name"].setValue( 'Interactive/Arnold/LG05_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["fileName"].setValue( 'LG05_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output79"]["data"].setValue( "lpe C<RS><L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["name"].setValue( 'Interactive/Arnold/LG05_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["fileName"].setValue( 'LG05_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output80"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["name"].setValue( 'Interactive/Arnold/LG05_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["fileName"].setValue( 'LG05_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output81"]["data"].setValue( "lpe C<RD><L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["name"].setValue( 'Interactive/Arnold/LG05_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["fileName"].setValue( 'LG05_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output82"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["name"].setValue( 'Interactive/Arnold/LG05_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["fileName"].setValue( 'LG05_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output83"]["data"].setValue( "lpe C<TD>.*<L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["name"].setValue( 'Interactive/Arnold/LG05_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["fileName"].setValue( 'LG05_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output84"]["data"].setValue( "lpe CV.*<L.'LG05'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["name"].setValue( 'Interactive/Arnold/LG06_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["fileName"].setValue( 'LG06_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output85"]["data"].setValue( "lpe C<RS><L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["name"].setValue( 'Interactive/Arnold/LG06_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["fileName"].setValue( 'LG06_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output86"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["name"].setValue( 'Interactive/Arnold/LG06_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["fileName"].setValue( 'LG06_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output87"]["data"].setValue( "lpe C<RD><L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["name"].setValue( 'Interactive/Arnold/LG06_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["fileName"].setValue( 'LG06_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output88"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["name"].setValue( 'Interactive/Arnold/LG06_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["fileName"].setValue( 'LG06_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output89"]["data"].setValue( "lpe C<TD>.*<L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["name"].setValue( 'Interactive/Arnold/LG06_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["fileName"].setValue( 'LG06_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output90"]["data"].setValue( "lpe CV.*<L.'LG06'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["name"].setValue( 'Interactive/Arnold/LG07_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["fileName"].setValue( 'LG07_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output91"]["data"].setValue( "lpe C<RS><L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["name"].setValue( 'Interactive/Arnold/LG07_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["fileName"].setValue( 'LG07_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output92"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["name"].setValue( 'Interactive/Arnold/LG07_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["fileName"].setValue( 'LG07_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output93"]["data"].setValue( "lpe C<RD><L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["name"].setValue( 'Interactive/Arnold/LG07_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["fileName"].setValue( 'LG07_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output94"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["name"].setValue( 'Interactive/Arnold/LG07_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["fileName"].setValue( 'LG07_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output95"]["data"].setValue( "lpe C<TD>.*<L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["name"].setValue( 'Interactive/Arnold/LG07_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["fileName"].setValue( 'LG07_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output96"]["data"].setValue( "lpe CV.*<L.'LG07'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["name"].setValue( 'Interactive/Arnold/LG08_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["fileName"].setValue( 'LG08_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output97"]["data"].setValue( "lpe C<RS><L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["name"].setValue( 'Interactive/Arnold/LG08_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["fileName"].setValue( 'LG08_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output98"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["name"].setValue( 'Interactive/Arnold/LG08_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["fileName"].setValue( 'LG08_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output99"]["data"].setValue( "lpe C<RD><L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["name"].setValue( 'Interactive/Arnold/LG08_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["fileName"].setValue( 'LG08_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output100"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["name"].setValue( 'Interactive/Arnold/LG08_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["fileName"].setValue( 'LG08_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output101"]["data"].setValue( "lpe C<TD>.*<L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["name"].setValue( 'Interactive/Arnold/LG08_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["fileName"].setValue( 'LG08_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output102"]["data"].setValue( "lpe CV.*<L.'LG08'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["name"].setValue( 'Interactive/Arnold/LG09_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["fileName"].setValue( 'LG09_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output103"]["data"].setValue( "lpe C<RS><L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["name"].setValue( 'Interactive/Arnold/LG09_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["fileName"].setValue( 'LG09_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output104"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["name"].setValue( 'Interactive/Arnold/LG09_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["fileName"].setValue( 'LG09_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output105"]["data"].setValue( "lpe C<RD><L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["name"].setValue( 'Interactive/Arnold/LG09_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["fileName"].setValue( 'LG09_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output106"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["name"].setValue( 'Interactive/Arnold/LG09_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["fileName"].setValue( 'LG09_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output107"]["data"].setValue( "lpe C<TD>.*<L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["name"].setValue( 'Interactive/Arnold/LG09_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["fileName"].setValue( 'LG09_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output108"]["data"].setValue( "lpe CV.*<L.'LG09'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["name"].setValue( 'Interactive/Arnold/LG10_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["fileName"].setValue( 'LG10_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output109"]["data"].setValue( "lpe C<RS><L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["name"].setValue( 'Interactive/Arnold/LG10_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["fileName"].setValue( 'LG10_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output110"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["name"].setValue( 'Interactive/Arnold/LG10_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["fileName"].setValue( 'LG10_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output111"]["data"].setValue( "lpe C<RD><L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["name"].setValue( 'Interactive/Arnold/LG10_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["fileName"].setValue( 'LG10_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output112"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["name"].setValue( 'Interactive/Arnold/LG10_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["fileName"].setValue( 'LG10_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output113"]["data"].setValue( "lpe C<TD>.*<L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["name"].setValue( 'Interactive/Arnold/LG10_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["fileName"].setValue( 'LG10_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output114"]["data"].setValue( "lpe CV.*<L.'LG10'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["name"].setValue( 'Interactive/Arnold/LG_default_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["fileName"].setValue( 'LG_default_specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output115"]["data"].setValue( "lpe C<RS><L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["name"].setValue( 'Interactive/Arnold/LG_default_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["fileName"].setValue( 'LG_default_specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output116"]["data"].setValue( "lpe C<RS>[DSVOB].*<L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["name"].setValue( 'Interactive/Arnold/LG_default_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["fileName"].setValue( 'LG_default_diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output117"]["data"].setValue( "lpe C<RD><L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["name"].setValue( 'Interactive/Arnold/LG_default_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["fileName"].setValue( 'LG_default_diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output118"]["data"].setValue( "lpe C<RD>[DSVOB].*<L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["name"].setValue( 'Interactive/Arnold/LG_default_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["fileName"].setValue( 'LG_default_sss' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output119"]["data"].setValue( "lpe C<TD>.*<L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["name"].setValue( 'Interactive/Arnold/LG_default_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["fileName"].setValue( 'LG_default_volume' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output120"]["data"].setValue( "lpe CV.*<L.'LG_default'>" )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["name"].setValue( 'Interactive/Arnold/diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["fileName"].setValue( 'diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output121"]["data"].setValue( 'color diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["name"].setValue( 'Interactive/Arnold/diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["fileName"].setValue( 'diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output122"]["data"].setValue( 'color diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["name"].setValue( 'Interactive/Arnold/diffuse_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["fileName"].setValue( 'diffuse_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output123"]["data"].setValue( 'color diffuse_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["name"].setValue( 'Interactive/Arnold/specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["fileName"].setValue( 'specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output124"]["data"].setValue( 'color specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["name"].setValue( 'Interactive/Arnold/specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["fileName"].setValue( 'specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output125"]["data"].setValue( 'color specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["name"].setValue( 'Interactive/Arnold/specular_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["fileName"].setValue( 'specular_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output126"]["data"].setValue( 'color specular_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["name"].setValue( 'Interactive/Arnold/coat_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["fileName"].setValue( 'coat_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output127"]["data"].setValue( 'color coat_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["name"].setValue( 'Interactive/Arnold/coat_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["fileName"].setValue( 'coat_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output128"]["data"].setValue( 'color coat_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["name"].setValue( 'Interactive/Arnold/coat_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["fileName"].setValue( 'coat_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output129"]["data"].setValue( 'color coat_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["name"].setValue( 'Interactive/Arnold/sheen_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["fileName"].setValue( 'sheen_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output130"]["data"].setValue( 'color sheen_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["name"].setValue( 'Interactive/Arnold/sheen_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["fileName"].setValue( 'sheen_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output131"]["data"].setValue( 'color sheen_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["name"].setValue( 'Interactive/Arnold/sheen_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["fileName"].setValue( 'sheen_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output132"]["data"].setValue( 'color sheen_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["name"].setValue( 'Interactive/Arnold/transmission_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["fileName"].setValue( 'transmission_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output133"]["data"].setValue( 'color transmission_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["name"].setValue( 'Interactive/Arnold/transmission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["fileName"].setValue( 'transmission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output134"]["data"].setValue( 'color transmission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["name"].setValue( 'Interactive/Arnold/transmission_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["fileName"].setValue( 'transmission_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output135"]["data"].setValue( 'color transmission_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["name"].setValue( 'Interactive/Arnold/sss_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["fileName"].setValue( 'sss_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output136"]["data"].setValue( 'color sss_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["name"].setValue( 'Interactive/Arnold/Sss_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["fileName"].setValue( 'sss_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output137"]["data"].setValue( 'color sss_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["name"].setValue( 'Interactive/Arnold/sss_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["fileName"].setValue( 'sss_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output138"]["data"].setValue( 'color sss_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["name"].setValue( 'Interactive/Arnold/Volume_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["fileName"].setValue( 'volume_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output139"]["data"].setValue( 'color volume_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["name"].setValue( 'Interactive/Arnold/Volume_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["fileName"].setValue( 'volume_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output140"]["data"].setValue( 'color volume_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["name"].setValue( 'Interactive/Arnold/Volume_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["fileName"].setValue( 'volume_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output141"]["data"].setValue( 'color volume_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["name"].setValue( 'Interactive/Arnold/Diffuse_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["fileName"].setValue( 'diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output142"]["data"].setValue( 'color diffuse_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["name"].setValue( 'Interactive/Arnold/Diffuse_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["fileName"].setValue( 'diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output143"]["data"].setValue( 'color diffuse_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["name"].setValue( 'Interactive/Arnold/Diffuse_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["fileName"].setValue( 'diffuse_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output144"]["data"].setValue( 'color diffuse_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["name"].setValue( 'Interactive/Arnold/Specular_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["fileName"].setValue( 'specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output145"]["data"].setValue( 'color specular_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["name"].setValue( 'Interactive/Arnold/Specular_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["fileName"].setValue( 'specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output146"]["data"].setValue( 'color specular_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["name"].setValue( 'Interactive/Arnold/Specular_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["fileName"].setValue( 'specular_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output147"]["data"].setValue( 'color specular_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["name"].setValue( 'Interactive/Arnold/Coat_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["fileName"].setValue( 'coat_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output148"]["data"].setValue( 'color coat_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["name"].setValue( 'Interactive/Arnold/Coat_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["fileName"].setValue( 'coat_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output149"]["data"].setValue( 'color coat_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["name"].setValue( 'Interactive/Arnold/Coat_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["fileName"].setValue( 'coat_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output150"]["data"].setValue( 'color coat_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["name"].setValue( 'Interactive/Arnold/Transmission_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["fileName"].setValue( 'transmission_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output151"]["data"].setValue( 'color transmission_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["name"].setValue( 'Interactive/Arnold/Transmission_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["fileName"].setValue( 'transmission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output152"]["data"].setValue( 'color transmission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["name"].setValue( 'Interactive/Arnold/Transmission_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["fileName"].setValue( 'transmission_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output153"]["data"].setValue( 'color transmission_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["name"].setValue( 'Interactive/Arnold/Sss_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["fileName"].setValue( 'sss_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output154"]["data"].setValue( 'color sss_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["name"].setValue( 'Interactive/Arnold/Sss_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["fileName"].setValue( 'sss_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output155"]["data"].setValue( 'color sss_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["name"].setValue( 'Interactive/Arnold/Sheen_Direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["fileName"].setValue( 'sheen_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output156"]["data"].setValue( 'color sheen_direct' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["name"].setValue( 'Interactive/Arnold/Sheen_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["fileName"].setValue( 'sheen_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output157"]["data"].setValue( 'color sheen_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["name"].setValue( 'Interactive/Arnold/Sheen_Albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["fileName"].setValue( 'sheen_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output158"]["data"].setValue( 'color sheen_albedo' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["name"].setValue( 'Interactive/Arnold/Emission_Indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["fileName"].setValue( 'emission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["allInteractiveOutputs"]["outputs"]["output159"]["data"].setValue( 'color emission_indirect' )
__children["RenderLayer"]["allInteractiveOutputs"]["__uiPosition"].setValue( imath.V2f( 333.786041, -80.3289185 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["DeleteOutputsBatch"]["user"]["aovs"], 'nodule:type', '' )
__children["RenderLayer"]["DeleteOutputsBatch"]["in"].setInput( __children["RenderLayer"]["allBatchOutputs"]["out"] )
__children["RenderLayer"]["DeleteOutputsBatch"]["names"].setInput( __children["RenderLayer"]["COLLECT_AOV_LISTS"]["__out"]["p0"] )
__children["RenderLayer"]["DeleteOutputsBatch"]["invertNames"].setValue( True )
__children["RenderLayer"]["DeleteOutputsBatch"]["__uiPosition"].setValue( imath.V2f( 278.72226, -91.4892654 ) )
__children["RenderLayer"]["DeleteOutputsInteractive"]["in"].setInput( __children["RenderLayer"]["allInteractiveOutputs"]["out"] )
__children["RenderLayer"]["DeleteOutputsInteractive"]["names"].setInput( __children["RenderLayer"]["DeleteOutputsBatch"]["names"] )
__children["RenderLayer"]["DeleteOutputsInteractive"]["invertNames"].setInput( __children["RenderLayer"]["DeleteOutputsBatch"]["invertNames"] )
__children["RenderLayer"]["DeleteOutputsInteractive"]["__uiPosition"].setValue( imath.V2f( 333.786041, -91.3064194 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__in"]["p0"].setInput( __children["RenderLayer"]["DeleteOutputsBatch"]["out"]["globals"] )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__in"]["p1"].setInput( __children["RenderLayer"]["allBatchOutputs"]["out"]["globals"] )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__uiPosition"].setValue( imath.V2f( 249.981934, -95.9604416 ) )
__children["RenderLayer"]["user_allAovs"].setInput( __children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_allAovs"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_allAovs"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_allAovs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_allAovs"], 'layout:section', 'AOV.AOVS_list' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_allAovs"], 'layout:index', 48 )
__children["RenderLayer"]["user_aovs"].setInput( __children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_aovs"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_aovs"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_aovs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_aovs"], 'layout:section', 'AOV.AOV_OUT' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_aovs"], 'layout:index', 49 )
__children["RenderLayer"]["beauty_aovExp"]["value"].setValue( '*/Beauty */diffuse_* */specular_*direct  */*ss_*direct */transmission_*direct */coat_*direct */sheen_*direct' )
__children["RenderLayer"]["beauty_aovExp"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_aovExp"], 'layout:index', 36 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_aovExp"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_aovExp"], 'description', '' )
__children["RenderLayer"]["beauty_indirects_aovExp"]["name"].setValue( 'beauty split' )
__children["RenderLayer"]["beauty_indirects_aovExp"]["value"].setValue( '*/Beauty */diffuse_* */specular_*  */sss_* */transmission_* */coat_*  */sheen_* */Albedo' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_indirects_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_indirects_aovExp"], 'layout:index', 37 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["beauty_indirects_aovExp"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["COLLECT_AOV_LISTS"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p0"].setInput( __children["RenderLayer"]["background_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p1"].setInput( __children["RenderLayer"]["background_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p2"].setInput( __children["RenderLayer"]["beauty_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p3"].setInput( __children["RenderLayer"]["beauty_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p4"].setInput( __children["RenderLayer"]["beauty_indirects_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p5"].setInput( __children["RenderLayer"]["beauty_indirects_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p6"].setInput( __children["RenderLayer"]["custom_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p7"].setInput( __children["RenderLayer"]["custom_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p8"].setInput( __children["RenderLayer"]["deep_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p9"].setInput( __children["RenderLayer"]["deep_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p10"].setInput( __children["RenderLayer"]["denoise_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p11"].setInput( __children["RenderLayer"]["denoise_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p12"].setInput( __children["RenderLayer"]["emission_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p13"].setInput( __children["RenderLayer"]["emission_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p14"].setInput( __children["RenderLayer"]["id_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p15"].setInput( __children["RenderLayer"]["id_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p16"].setInput( __children["RenderLayer"]["lightGroupsIndirect_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p17"].setInput( __children["RenderLayer"]["lightGroupsIndirect_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p18"].setInput( __children["RenderLayer"]["lightGroups_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p19"].setInput( __children["RenderLayer"]["lightGroups_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p20"].setInput( __children["RenderLayer"]["utility_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p21"].setInput( __children["RenderLayer"]["utility_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p22"].setInput( __children["RenderLayer"]["volume_aovExp"]["enabled"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__in"]["p23"].setInput( __children["RenderLayer"]["volume_aovExp"]["value"] )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__uiPosition"].setValue( imath.V2f( 303.967804, -86.2800751 ) )
__children["RenderLayer"]["id_aovExp"]["name"].setValue( 'id' )
__children["RenderLayer"]["id_aovExp"]["value"].setValue( '*ID01 *ID02 *ID03 *ID04 *ID05 *ID06 *ID07 *ID08 ' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["id_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["id_aovExp"], 'layout:index', 41 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["id_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["utility_aovExp"]["name"].setValue( 'utility' )
__children["RenderLayer"]["utility_aovExp"]["value"].setValue( '*crypto_material *crypto_object *crypto_asset *N *P *Z *motionvectors *Motionvector UV Pref' )
__children["RenderLayer"]["utility_aovExp"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_aovExp"], 'layout:index', 44 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["lightGroups_aovExp"]["name"].setValue( 'lightGroups' )
__children["RenderLayer"]["lightGroups_aovExp"]["value"].setValue( '*/LG01 */LG02 */LG03 */LG04 */LG05 */LG06 */LG07 */LG08 */LG09 */LG10 **LG_default' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroups_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroups_aovExp"], 'layout:index', 38 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroups_aovExp"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroups_aovExp"], 'description', '\n' )
__children["RenderLayer"]["lightGroupsIndirect_aovExp"]["name"].setValue( 'lightGroups split' )
__children["RenderLayer"]["lightGroupsIndirect_aovExp"]["value"].setValue( '*LG01_* *LG02_* *LG03_* *LG04_* *LG05_* *LG06_* *LG07_* *LG06_* LG07_* LG08_* LG09_* LG010_* *LG_default_*' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroupsIndirect_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroupsIndirect_aovExp"], 'layout:index', 39 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["lightGroupsIndirect_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["custom_aovExp"]["value"].setValue( '*Cputime *Nlights *Raycount' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_aovExp"], 'layout:index', 45 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["custom_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["uv_SHR"]["parameters"]["color_mode"].setValue( 'uv' )
__children["RenderLayer"]["uv_SHR"]["parameters"]["shade_mode"].setValue( 'flat' )
__children["RenderLayer"]["uv_SHR"]["__uiPosition"].setValue( imath.V2f( 267.870148, -25.0385399 ) )
__children["RenderLayer"]["UV_AOV_shader"]["in"].setInput( __children["RenderLayer"]["ArnoldImager2"]["out"] )
__children["RenderLayer"]["UV_AOV_shader"]["shader"].setInput( __children["RenderLayer"]["aov_write_UV"]["out"] )
__children["RenderLayer"]["UV_AOV_shader"]["optionSuffix"].setValue( 'UV' )
__children["RenderLayer"]["UV_AOV_shader"]["__uiPosition"].setValue( imath.V2f( 301.607361, -24.4385338 ) )
__children["RenderLayer"]["aov_write_UV"]["parameters"]["aov_input"].setInput( __children["RenderLayer"]["uv_SHR"]["out"] )
__children["RenderLayer"]["aov_write_UV"]["parameters"]["aov_name"].setValue( 'UV' )
__children["RenderLayer"]["aov_write_UV"]["__uiPosition"].setValue( imath.V2f( 283.317169, -24.4385338 ) )
__children["RenderLayer"]["cryptomatte_AOV_shader"]["in"].setInput( __children["RenderLayer"]["UV_AOV_shader"]["out"] )
__children["RenderLayer"]["cryptomatte_AOV_shader"]["shader"].setInput( __children["RenderLayer"]["Cryptomatte"]["out"] )
__children["RenderLayer"]["cryptomatte_AOV_shader"]["optionSuffix"].setValue( 'A' )
__children["RenderLayer"]["cryptomatte_AOV_shader"]["__uiPosition"].setValue( imath.V2f( 301.607361, -35.7385864 ) )
__children["RenderLayer"]["MotionVector"]["__uiPosition"].setValue( imath.V2f( 256.640656, -48.1976166 ) )
__children["RenderLayer"]["motion_vector_time_expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["motion_vector_time_expression"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["motion_vector_time_expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["RenderLayer"]["MotionVector"]["parameters"]["raw"].setValue( True )
__children["RenderLayer"]["MotionVector"]["parameters"]["time0"].setInput( __children["RenderLayer"]["motion_vector_time_expression"]["__out"]["p0"] )
__children["RenderLayer"]["MotionVector"]["parameters"]["time1"].setInput( __children["RenderLayer"]["motion_vector_time_expression"]["__out"]["p1"] )
__children["RenderLayer"]["motion_vector_time_expression"]["__uiPosition"].setValue( imath.V2f( 248.803406, -42.7909698 ) )
__children["RenderLayer"]["motion_vector_time_expression"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["motion_vector_time_expression"]["__expression"].setValue( 'parent["__out"]["p0"] = context.getFrame() - 1\nparent["__out"]["p1"] = context.getFrame() + 1' )
__children["RenderLayer"]["motionvectors_AOV_shader"]["in"].setInput( __children["RenderLayer"]["cryptomatte_AOV_shader"]["out"] )
__children["RenderLayer"]["motionvectors_AOV_shader"]["shader"].setInput( __children["RenderLayer"]["aov_write_motion_vector"]["out"] )
__children["RenderLayer"]["motionvectors_AOV_shader"]["optionSuffix"].setValue( 'B' )
__children["RenderLayer"]["motionvectors_AOV_shader"]["__uiPosition"].setValue( imath.V2f( 301.607361, -47.597641 ) )
__children["RenderLayer"]["aov_write_motion_vector"]["parameters"]["aov_input"].setInput( __children["RenderLayer"]["MotionVector"]["out"] )
__children["RenderLayer"]["aov_write_motion_vector"]["parameters"]["aov_name"].setValue( 'motionvectors' )
__children["RenderLayer"]["aov_write_motion_vector"]["__uiPosition"].setValue( imath.V2f( 277.158875, -47.5976181 ) )
__children["RenderLayer"]["background_aovExp"]["name"].setValue( 'background' )
__children["RenderLayer"]["background_aovExp"]["value"].setValue( '*Background *Shadow_Matte *Shadow *Shadow_Diff *Shadow_Mask' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["background_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["background_aovExp"], 'layout:index', 46 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["background_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["denoise_aovExp"]["name"].setValue( 'denoise' )
__children["RenderLayer"]["denoise_aovExp"]["value"].setValue( 'Denoise_Albedo Denoise_Albedo_Surfaces *Denoise_Albedo_Noisy ' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoise_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoise_aovExp"], 'layout:index', 47 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoise_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["emission_aovExp"]["name"].setValue( 'emission' )
__children["RenderLayer"]["emission_aovExp"]["value"].setValue( '*emission *emission_indirect *EmissionVolumeDirect' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["emission_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["emission_aovExp"], 'layout:index', 42 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["emission_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["volume_aovExp"]["name"].setValue( 'volume' )
__children["RenderLayer"]["volume_aovExp"]["value"].setValue( '*Volume *Volume_Direct *Volume_Indirect' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["volume_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["volume_aovExp"], 'layout:index', 43 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["volume_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["deep_aovExp"]["name"].setValue( 'deep' )
__children["RenderLayer"]["deep_aovExp"]["value"].setValue( '*/deep' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["deep_aovExp"], 'layout:section', 'AOV' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["deep_aovExp"], 'layout:index', 40 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["deep_aovExp"], 'nodule:type', '' )
__children["RenderLayer"]["includeShadowMatte"]["index"].setInput( __children["RenderLayer"]["shadowMatteVis"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["includeShadowMatte"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["includeShadowMatte"]["in"][0].setInput( __children["RenderLayer"]["Dot81"]["out"] )
__children["RenderLayer"]["includeShadowMatte"]["in"][1].setInput( __children["RenderLayer"]["ShaderAssignment3"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["includeShadowMatte"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["includeShadowMatte"]["__uiPosition"].setValue( imath.V2f( 233.334335, 42.1984253 ) )
__children["RenderLayer"]["Dot81"]["in"].setInput( __children["RenderLayer"]["MATTE_OBJECTS"]["out"] )
__children["RenderLayer"]["Dot81"]["__uiPosition"].setValue( imath.V2f( 230.334335, 116.502121 ) )
__children["RenderLayer"]["layer_type"].setValue( 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'spreadsheet:columnName', 'renderTypeValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'label', 'Render Type' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'preset:Beauty', 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'preset:Shadow', 'Shadow' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'preset:Utility', 'Utility' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["layer_type"], 'description', 'Choose between 3 options:\n\n- Beauty: A render with shaders and lights to be used as a CG image.\n\n- Shadow: Built in layer for shadow pass. Red channel shadow, Green channel ambient Oclussion.\n\n\tSelect lights to be used in the "Shadow Light" field:\n\n\tBy default all lights are used to project shadow "*"\n\n- Utility: Any render does not a CG image or a shadow pass.\n\n\tBy default it won\'t use any light. Lights can be turn on via the "Use Utility Layer Lights"\n\n\t\n\n\t' )
__children["RenderLayer"]["Backdrop"]["title"].setValue( 'WRITE CRYTPO AND DEEP' )
__children["RenderLayer"]["Backdrop"]["__uiPosition"].setValue( imath.V2f( 285.341675, -221.984436 ) )
__children["RenderLayer"]["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -18.6599121, -102.685272 ), imath.V2f( 115.940704, 8.42700195 ) ) )
__children["RenderLayer"]["Dot84"]["in"].setInput( __children["RenderLayer"]["arnold_render"]["task"] )
__children["RenderLayer"]["Dot84"]["__uiPosition"].setValue( imath.V2f( 258.340057, -196.81131 ) )
__children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"].setValue( 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"], 'preset:Beauty', 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"], 'preset:Shadow', 'Shadow' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["user"]["renderType"], 'preset:Utility', 'Utility' )
__children["RenderLayer"]["ContextVariables_render_vars"]["variables"]["layer_type"]["value"].setValue( 'Beauty' )
__children["RenderLayer"]["ContextVariables_render_vars"]["variables"]["layer_name"]["value"].setValue( 'Layer' )
__children["RenderLayer"]["ContextVariables_render_vars"]["in"].setInput( __children["RenderLayer"]["ContextVariables_render_path"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_vars"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["ContextVariables_render_vars"]["__uiPosition"].setValue( imath.V2f( 324.217651, -407.363129 ) )
__children["RenderLayer"]["Dot85"]["in"].setInput( __children["RenderLayer"]["DeleteOutputsBatch"]["out"] )
__children["RenderLayer"]["Dot85"]["__uiPosition"].setValue( imath.V2f( 278.72226, -113.497925 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadowMatteVis"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadowMatteVis"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadowMatteVis"], 'label', 'Shadow Matte in Bty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadowMatteVis"], 'layout:index', 13 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadowMatteVis"], 'description', 'Shows shadow matte in Beauty layer on top the background' )
__children["RenderLayer"]["BoxOut"]["name"].setValue( 'out_render' )
__children["RenderLayer"]["BoxOut"]["in"].setInput( __children["RenderLayer"]["PublishTasklist"]["task"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.709999979, 0.349999994, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.709999979, 0.349999994, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["__out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 325.717651, -430.502411 ) )
__children["RenderLayer"]["out_render"].setInput( __children["RenderLayer"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out_render"], 'nodule:color', imath.Color3f( 0.709999979, 0.349999994, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out_render"], 'connectionGadget:color', imath.Color3f( 0.709999979, 0.349999994, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out_render"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out_render"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out_render"], 'layout:index', 63 )
__children["RenderLayer"]["BoxOut1"]["in"].setInput( __children["RenderLayer"]["Dot93"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["__out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["RenderLayer"]["BoxOut1"]["passThrough"].setInput( __children["RenderLayer"]["Dot77"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxOut1"]["passThrough"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["BoxOut1"]["enabled"].setInput( __children["RenderLayer"]["enabled"] )
__children["RenderLayer"]["BoxOut1"]["__uiPosition"].setValue( imath.V2f( 384.514404, -176.735092 ) )
__children["RenderLayer"]["out"].setInput( __children["RenderLayer"]["BoxOut1"]["__out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["out"], 'layout:index', 64 )
__children["RenderLayer"]["FilterWidth"].setValue( 2 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FilterWidth"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FilterWidth"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FilterWidth"], 'layout:index', 20 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FilterWidth"], 'label', 'Filter Width' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["FilterWidth"], 'description', 'filter width in pixels' )
__children["RenderLayer"]["fiter_type"].setValue( 'gaussian' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:gaussian', 'gaussian' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:mitnet', 'mitnet' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:catrom', 'catrom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:sinc', 'sinc' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:box', 'box' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:triangle', 'triangle' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:blackman_harris', 'blackman_harris' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:contour', 'contour' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:heatmap', 'heatmap' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:variance', 'variance' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:farthest', 'farthest' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'preset:closest', 'closest' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'layout:index', 19 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'label', 'Filter Type' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["fiter_type"], 'description', "Choose image filter type for aov's" )
__children["RenderLayer"]["altFilter"].setValue( 'closest' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'layout:index', 27 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'preset:closest', 'closest' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'preset:variance', 'variance' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'label', 'aov(motion_vector etc)' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["altFilter"], 'description', "Choose image filter type for non color aov's" )
__children["RenderLayer"]["Dot86"]["in"].setInput( __children["RenderLayer"]["ImageWriterBeauty"]["task"] )
__children["RenderLayer"]["Dot86"]["__uiPosition"].setValue( imath.V2f( 279.596069, -218.946289 ) )
__children["RenderLayer"]["SwitchWriteDeep"]["index"].setInput( __children["RenderLayer"]["COLLECT_PATHS_"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SwitchWriteDeep"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["SwitchWriteDeep"]["in"][0].setInput( __children["RenderLayer"]["SwitchWriteCrypto"]["out"] )
__children["RenderLayer"]["SwitchWriteDeep"]["in"][1].setInput( __children["RenderLayer"]["ImageWriterDeep"]["task"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SwitchWriteDeep"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["SwitchWriteDeep"]["__uiPosition"].setValue( imath.V2f( 284.896057, -317.972992 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["preserve_layer_name"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["preserve_layer_name"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["preserve_layer_name"], 'layout:index', 26 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["preserve_layer_name"], 'label', 'Preserve Layer Name' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["preserve_layer_name"], 'description', 'If checked, the data of the different AOVs will be stored in the EXR in layers with the names of the AOV, and not the RGB.' )
__children["RenderLayer"]["ArnoldImager2"]["enabled"].setInput( __children["RenderLayer"]["enable_denoiser"] )
__children["RenderLayer"]["ArnoldImager2"]["in"].setInput( __children["RenderLayer"]["RENDER_LAYER_TYPE_SWITCH"]["out"] )
__children["RenderLayer"]["ArnoldImager2"]["imager"].setInput( __children["RenderLayer"]["Switch1"]["out"] )
__children["RenderLayer"]["ArnoldImager2"]["__uiPosition"].setValue( imath.V2f( 301.607361, -0.132016897 ) )
__children["RenderLayer"]["ImagerDenoiserOidn1"]["parameters"]["layer_selection"].setValue( '* and not *Pref *N *P *Z UV *Motionvector *crypto_material *crypto_object *crypto_asset *motionvectors ' )
__children["RenderLayer"]["ImagerDenoiserOidn1"]["__uiPosition"].setValue( imath.V2f( 265.333801, 7.54514027 ) )
__children["RenderLayer"]["enable_denoiser"].setValue( False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enable_denoiser"], 'description', 'Enable Denoiser (Experimental)' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enable_denoiser"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enable_denoiser"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enable_denoiser"], 'layout:index', 17 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["enable_denoiser"], 'label', 'Denoiser(experimental)' )
__children["RenderLayer"]["Expression1"]["__in"]["p0"].setInput( __children["RenderLayer"]["layer_type"] )
__children["RenderLayer"]["Expression1"]["__uiPosition"].setValue( imath.V2f( 286.78006, 17.6652565 ) )
__children["RenderLayer"]["SwitchWriteCrypto"]["index"].setInput( __children["RenderLayer"]["Expression"]["__out"]["p3"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SwitchWriteCrypto"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["SwitchWriteCrypto"]["in"][0].setInput( __children["RenderLayer"]["Dot86"]["out"] )
__children["RenderLayer"]["SwitchWriteCrypto"]["in"][1].setInput( __children["RenderLayer"]["ImageWriterCrypto"]["task"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SwitchWriteCrypto"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["SwitchWriteCrypto"]["__uiPosition"].setValue( imath.V2f( 282.596069, -296.837311 ) )
__children["RenderLayer"]["disable_lights"]["in"].setInput( __children["RenderLayer"]["Dot79"]["out"] )
__children["RenderLayer"]["disable_lights"]["attributes"]["linkedLights"]["enabled"].setValue( True )
__children["RenderLayer"]["disable_lights"]["__uiPosition"].setValue( imath.V2f( 345.423981, 69.7754364 ) )
__children["RenderLayer"]["ShaderAssignment"]["in"].setInput( __children["RenderLayer"]["Switch3"]["out"] )
__children["RenderLayer"]["ShaderAssignment"]["filter"].setInput( __children["RenderLayer"]["Utility_A_PathFilter"]["out"] )
__children["RenderLayer"]["ShaderAssignment"]["shader"].setInput( __children["RenderLayer"]["BoxIn1"]["out"] )
__children["RenderLayer"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 354.696045, 52.087162 ) )
__children["RenderLayer"]["BoxIn1"]["name"].setValue( 'utility_shader_A' )
__children["RenderLayer"]["BoxIn1"]["__in"].setInput( __children["RenderLayer"]["utility_shader_A"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn1"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn1"]["__in"], 'description', 'The shader to be assigned.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["RenderLayer"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 339.530548, 52.087162 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_A"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_A"], 'description', 'The shader to be assigned to override.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_A"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_A"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_A"], 'layout:index', 52 )
__children["RenderLayer"]["Utility_A_PathFilter"]["paths"].setInput( __children["RenderLayer"]["paths"] )
__children["RenderLayer"]["Utility_A_PathFilter"]["__uiPosition"].setValue( imath.V2f( 367.965576, 61.5472298 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'description', 'Objects to override with the shader.\n\nIn order to assign the shader to the shape use the following pattern: "/.../*"\n\n\tExample:\n\n\t"/scene_grp/environment_grp/.../*"' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'layout:index', 53 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'label', 'Utility_paths_A' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths"], 'divider', True )
__children["RenderLayer"]["ShaderAssignment1"]["in"].setInput( __children["RenderLayer"]["ShaderAssignment"]["out"] )
__children["RenderLayer"]["ShaderAssignment1"]["filter"].setInput( __children["RenderLayer"]["Utility_B_PathFilter"]["out"] )
__children["RenderLayer"]["ShaderAssignment1"]["shader"].setInput( __children["RenderLayer"]["BoxIn2"]["out"] )
__children["RenderLayer"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( 354.696045, 43.9230995 ) )
__children["RenderLayer"]["BoxIn2"]["name"].setValue( 'utility_shader_B' )
__children["RenderLayer"]["BoxIn2"]["__in"].setInput( __children["RenderLayer"]["utility_shader_B"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn2"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn2"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn2"]["__in"], 'description', 'The shader to be assigned.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn2"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn2"]["out"], 'noduleLayout:section', 'right' )
__children["RenderLayer"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( 339.244171, 43.9230995 ) )
__children["RenderLayer"]["Utility_B_PathFilter"]["paths"].setInput( __children["RenderLayer"]["paths1"] )
__children["RenderLayer"]["Utility_B_PathFilter"]["__uiPosition"].setValue( imath.V2f( 367.965576, 48.1273918 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_B"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_B"], 'description', 'The shader to be assigned to override.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_B"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_B"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_B"], 'layout:index', 54 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'description', 'Objects to override with the shader.\n\nIn order to assign the shader to the shape use the following pattern: "/.../*"\n\n\tExample:\n\n\t"/scene_grp/environment_grp/.../*"' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'layout:index', 55 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'label', 'Utility_paths_B' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths1"], 'divider', True )
__children["RenderLayer"]["ShaderAssignment2"]["in"].setInput( __children["RenderLayer"]["ShaderAssignment1"]["out"] )
__children["RenderLayer"]["ShaderAssignment2"]["filter"].setInput( __children["RenderLayer"]["Utility_C_PathFilter"]["out"] )
__children["RenderLayer"]["ShaderAssignment2"]["shader"].setInput( __children["RenderLayer"]["BoxIn3"]["out"] )
__children["RenderLayer"]["ShaderAssignment2"]["__uiPosition"].setValue( imath.V2f( 354.340027, 32.3294334 ) )
__children["RenderLayer"]["BoxIn3"]["name"].setValue( 'utility_shader_C' )
__children["RenderLayer"]["BoxIn3"]["__in"].setInput( __children["RenderLayer"]["utility_shader_C"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn3"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn3"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn3"]["__in"], 'description', 'The shader to be assigned.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn3"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["BoxIn3"]["out"], 'noduleLayout:section', 'right' )
__children["RenderLayer"]["BoxIn3"]["__uiPosition"].setValue( imath.V2f( 338.908173, 32.3294334 ) )
__children["RenderLayer"]["Utility_C_PathFilter"]["paths"].setInput( __children["RenderLayer"]["paths2"] )
__children["RenderLayer"]["Utility_C_PathFilter"]["__uiPosition"].setValue( imath.V2f( 366.578491, 36.9278679 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_C"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_C"], 'description', 'The shader to be assigned to override.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_C"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_C"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["utility_shader_C"], 'layout:index', 56 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'description', 'Objects to override with the shader.\n\nIn order to assign the shader to the shape use the following pattern: "/.../*"\n\n\tExample:\n\n\t"/scene_grp/environment_grp/.../*"' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'layout:index', 57 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["paths2"], 'label', 'Utility_paths_C' )
__children["RenderLayer"]["Dot87"]["in"].setInput( __children["RenderLayer"]["half_res"]["out"] )
__children["RenderLayer"]["Dot87"]["__uiPosition"].setValue( imath.V2f( 299.994659, 24.9974022 ) )
__children["RenderLayer"]["ShadowMatte1"]["parameters"]["indirect_diffuse_enable"].setInput( __children["RenderLayer"]["indirect_diffuse_enable"] )
__children["RenderLayer"]["ShadowMatte1"]["parameters"]["indirect_specular_enable"].setInput( __children["RenderLayer"]["indirect_specular_enable"] )
__children["RenderLayer"]["ShadowMatte1"]["__uiPosition"].setValue( imath.V2f( 222.309814, 50.3624878 ) )
__children["RenderLayer"]["ShaderAssignment3"]["in"].setInput( __children["RenderLayer"]["Dot88"]["out"] )
__children["RenderLayer"]["ShaderAssignment3"]["filter"].setInput( __children["RenderLayer"]["shadowCast"]["out"] )
__children["RenderLayer"]["ShaderAssignment3"]["shader"].setInput( __children["RenderLayer"]["ShadowMatte1"]["out"] )
__children["RenderLayer"]["ShaderAssignment3"]["__uiPosition"].setValue( imath.V2f( 247.528595, 50.3624878 ) )
__children["RenderLayer"]["Dot88"]["in"].setInput( __children["RenderLayer"]["Dot80"]["out"] )
__children["RenderLayer"]["Dot88"]["__uiPosition"].setValue( imath.V2f( 247.528595, 76.8617401 ) )
__children["RenderLayer"]["Switch1"]["index"].setInput( __children["RenderLayer"]["denoiser_type"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch1"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["Switch1"]["in"][0].setInput( __children["RenderLayer"]["ImagerDenoiserOidn1"]["out"] )
__children["RenderLayer"]["Switch1"]["in"][1].setInput( __children["RenderLayer"]["ImagerDenoiserNoice"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch1"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Switch1"]["__uiPosition"].setValue( imath.V2f( 285.591003, 3.7469542 ) )
__children["RenderLayer"]["ImagerDenoiserNoice"]["__uiPosition"].setValue( imath.V2f( 275.550568, 12.2948341 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'description', 'Choose between:\n\n\t-Oidn (Open Image Denoiser) CPU based - fast\n\n\t-Noice CPU based - slow' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'layout:index', 18 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'label', 'Denoiser Type' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'preset:Oidn', 0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["denoiser_type"], 'preset:Noice', 1 )
__children["RenderLayer"]["ArnoldOptions"]["in"].setInput( __children["RenderLayer"]["bypassAOVs"]["out"] )
__children["RenderLayer"]["ArnoldOptions"]["options"]["enableProgressiveRender"].setInput( __children["RenderLayer"]["options_enableProgressiveRender"] )
__children["RenderLayer"]["ArnoldOptions"]["options"]["progressiveMinAASamples"].setInput( __children["RenderLayer"]["options_progressiveMinAASamples"] )
__children["RenderLayer"]["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( 336.786041, -111.555771 ) )
__children["RenderLayer"]["options_enableProgressiveRender"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'spreadsheet:columnName', 'enableProgressiveRender' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'description', 'Enables progressive rendering during interactive render, with a series of coarse low-resolution\nrenders followed by a full quality render updated continuously.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'label', 'Progressive' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'deletable', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'layout:section', 'Interactive Overwrites' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'layout:index', 61 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"]["value"], 'spreadsheet:columnName', 'enableProgressiveRenderValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_enableProgressiveRender"]["enabled"], 'spreadsheet:columnName', 'enableProgressiveRenderEnabled' )
__children["RenderLayer"]["options_progressiveMinAASamples"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'spreadsheet:columnName', 'progressiveMinAASamples' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'description', 'Controls the coarseness of the first low resolution pass\nof interactive rendering. A value of `-4` starts with 16x16 pixel\nblocks, `-3` gives 8x8 blocks, `-2` gives 4x4, `-1` gives 2x2 and\n`0` disables the low resolution passes completely.\n\nThese settings will be ignored on the farm!' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'label', 'Min AA Samples' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'deletable', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'layout:section', 'Interactive Overwrites' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'layout:index', 62 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"]["value"], 'spreadsheet:columnName', 'progressiveMinAASamplesValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_progressiveMinAASamples"]["enabled"], 'spreadsheet:columnName', 'progressiveMinAASamplesEnabled' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'noduleLayout:label', 'Indirect specular' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'label', 'Indirect specular in Bty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'noduleLayout:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'description', 'Matte shadow objects reflected on the shadow receiver object' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_specular_enable"], 'layout:index', 14 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'noduleLayout:label', 'Indirect Diffuse' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'label', 'Indirect Diffuse in Bty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'noduleLayout:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'description', 'Matte shadow objects bounces light on the shadow receiver object' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'layout:index', 15 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["indirect_diffuse_enable"], 'divider', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'description', 'Objects will be rendered as matte (black surfaceShader + black alpha)' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'layout:index', 10 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'label', 'Matte Object' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["matte_objects"], 'divider', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'description', "Set camera visibility to OFF.\n\n\tgeometry won't be visible to camera, but will project shadows and will be visible in reflections and refractions." )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["cam_vis_off"], 'label', 'Cam Vis Off' )
__children["RenderLayer"]["DISABLE_OBJECTS"]["in"].setInput( __children["RenderLayer"]["Dot"]["out"] )
__children["RenderLayer"]["DISABLE_OBJECTS"]["filter"].setInput( __children["RenderLayer"]["PathFilter"]["out"] )
__children["RenderLayer"]["DISABLE_OBJECTS"]["attributes"]["visibility"]["value"].setValue( False )
__children["RenderLayer"]["DISABLE_OBJECTS"]["attributes"]["visibility"]["enabled"].setValue( True )
__children["RenderLayer"]["DISABLE_OBJECTS"]["__uiPosition"].setValue( imath.V2f( 300.134277, 189.691025 ) )
__children["RenderLayer"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/scene_grp/*' ] ) )
__children["RenderLayer"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 313.415771, 195.773056 ) )
__children["RenderLayer"]["CAMERA_VISIBILITY_ON"]["in"].setInput( __children["RenderLayer"]["DISABLE_OBJECTS"]["out"] )
__children["RenderLayer"]["CAMERA_VISIBILITY_ON"]["filter"].setInput( __children["RenderLayer"]["PathFilter1"]["out"] )
__children["RenderLayer"]["CAMERA_VISIBILITY_ON"]["attributes"]["visibility"]["enabled"].setValue( True )
__children["RenderLayer"]["CAMERA_VISIBILITY_ON"]["__uiPosition"].setValue( imath.V2f( 300.134277, 175.008453 ) )
__children["RenderLayer"]["PathFilter1"]["paths"].setInput( __children["RenderLayer"]["add_objects_to_layer"] )
__children["RenderLayer"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 316.813416, 179.99649 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'description', 'By default a layer does not contain geometry.\n\nAdd objects from Hierarchy View (outliner).' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'label', 'Add Objects to Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["add_objects_to_layer"], 'divider', True )
__children["RenderLayer"]["use_lights"]["user"]["use_lights"].setInput( __children["RenderLayer"]["user_lights_to_use"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_lights"]["user"]["use_lights"], 'nodule:type', '' )
__children["RenderLayer"]["use_lights"]["in"].setInput( __children["RenderLayer"]["Dot79"]["out"] )
__children["RenderLayer"]["use_lights"]["attributes"]["linkedLights"]["enabled"].setValue( True )
__children["RenderLayer"]["use_lights"]["attributes"]["linkedLights"]["value"].setInput( __children["RenderLayer"]["Expression3"]["__out"]["p0"] )
__children["RenderLayer"]["use_lights"]["__uiPosition"].setValue( imath.V2f( 362.225891, 69.5297241 ) )
__children["RenderLayer"]["Switch3"]["user"]["use_lights"].setInput( __children["RenderLayer"]["user_use_lights"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch3"]["user"]["use_lights"], 'nodule:type', '' )
__children["RenderLayer"]["Switch3"]["index"].setInput( __children["RenderLayer"]["Expression2"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch3"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["Switch3"]["in"][0].setInput( __children["RenderLayer"]["disable_lights"]["out"] )
__children["RenderLayer"]["Switch3"]["in"][1].setInput( __children["RenderLayer"]["use_lights"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch3"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Switch3"]["__uiPosition"].setValue( imath.V2f( 354.696045, 61.3656654 ) )
__children["RenderLayer"]["Expression2"]["__in"]["p0"].setInput( __children["RenderLayer"]["Switch3"]["user"]["use_lights"] )
__children["RenderLayer"]["Expression2"]["__uiPosition"].setValue( imath.V2f( 340.235687, 61.0886536 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'layout:index', 50 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'divider', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'label', 'Enable Utility Layer Lights' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_use_lights"], 'description', 'By default lights are been used in utility layer.\n\nIf enabled, lights will be used.' )
__children["RenderLayer"]["Expression3"]["__in"]["p0"].setInput( __children["RenderLayer"]["use_lights"]["user"]["use_lights"] )
__children["RenderLayer"]["Expression3"]["__uiPosition"].setValue( imath.V2f( 370.225891, 69.5288086 ) )
__children["RenderLayer"]["user_lights_to_use"].setValue( '*' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'layout:section', 'Utility_Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'layout:index', 51 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'label', 'Utility Layer Lights' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'divider', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_lights_to_use"], 'description', 'Lights to be used in the  utility layer\n\n\t- By default all lights are used "*"\n\n\t- Copy full path for specific ligths: "/light_rig_grp/key_light_LG03"\n\n\t- To add more than one light use space separation: /light_rig_grp/key_light_LG03 /light_rig_grp/rim_light_LG04' )
__children["RenderLayer"]["prune_misc_grp"]["in"].setInput( __children["RenderLayer"]["Dot89"]["out"] )
__children["RenderLayer"]["prune_misc_grp"]["filter"].setInput( __children["RenderLayer"]["PathFilter2"]["out"] )
__children["RenderLayer"]["prune_misc_grp"]["__uiPosition"].setValue( imath.V2f( 278.72226, -73.038887 ) )
__children["RenderLayer"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/misc_grp' ] ) )
__children["RenderLayer"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 294.008942, -68.4959412 ) )
__children["RenderLayer"]["Dot89"]["in"].setInput( __children["RenderLayer"]["motionvectors_AOV_shader"]["out"] )
__children["RenderLayer"]["Dot89"]["__uiPosition"].setValue( imath.V2f( 301.607361, -56.7154999 ) )
__children["RenderLayer"]["CollectImagesDeep"]["in"].setInput( __children["RenderLayer"]["deep_read"]["out"] )
__children["RenderLayer"]["CollectImagesDeep"]["rootLayers"].setInput( __children["RenderLayer"]["COLLECT_PATHS_"]["__out"]["p0"] )
__children["RenderLayer"]["CollectImagesDeep"]["layerVariable"].setValue( 'collect:deep' )
__children["RenderLayer"]["CollectImagesDeep"]["__uiPosition"].setValue( imath.V2f( 312.349548, -284.096588 ) )
__children["RenderLayer"]["Cryptomatte"]["parameters"]["preview_in_exr"].setValue( True )
__children["RenderLayer"]["Cryptomatte"]["parameters"]["process_obj_path_pipes"].setValue( False )
__children["RenderLayer"]["Cryptomatte"]["parameters"]["process_mat_path_pipes"].setValue( False )
__children["RenderLayer"]["Cryptomatte"]["parameters"]["process_legacy"].setValue( False )
__children["RenderLayer"]["Cryptomatte"]["__uiPosition"].setValue( imath.V2f( 284.018982, -35.7385864 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Expression4"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Expression4"], 'annotation:user:text', 'not sure why disabling deep output' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Expression4"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["RenderLayer"]["Expression4"]["__uiPosition"].setValue( imath.V2f( 298.630402, -79.6468353 ) )
__children["RenderLayer"]["subPixelMerge"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'spreadsheet:columnName', 'subpixel_mergeValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'label', 'subPixelMerge' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'layout:index', 28 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["subPixelMerge"], 'description', "Subpixel merge takes into account screen space resolution to further compress the file without losing too much accuracy, keeping more deep samples where they are needed. Note that adding large 'Tolerance Values' will override the default behavior of the 'Subpixel Merge'." )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'spreadsheet:columnName', 'use_RGB_opacityValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'label', 'use RGB Opacity' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'layout:index', 29 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["use_RGB_Opacity"], 'description', 'By default a single channel alpha is used, setting this to true uses RGB opacity, saved as RA, GA, BA channels. Nuke only expects an alpha channel, so this might require further work in comp.' )
__children["RenderLayer"]["Alpha_Half_Precision"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'spreadsheet:columnName', 'alpha_half_precisionValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'label', 'Alpha Half Precision' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'layout:index', 30 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Half_Precision"], 'description', 'Sets alpha to 16bit half-precision. Beneficial in reducing file size.' )
__children["RenderLayer"]["Alpha_Tolerance"].setValue( 0.009999999776482582 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'spreadsheet:columnName', 'alpha_toleranceValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'label', 'Alpha Tolerance' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'layout:index', 31 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Alpha_Tolerance"], 'description', 'If the opacity difference along the depth is smaller than this threshold, samples could be merged. Any samples that fall out of this threshold difference value will be merged, and only the samples that have a larger value than the tolerance value will remain.' )
__children["RenderLayer"]["Depth_Half_Precision"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'spreadsheet:columnName', 'depth_half_precisionValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'label', 'Depth Half Precision' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'layout:index', 32 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Half_Precision"], 'description', 'Set depth to 16bit half-precision. Depth is normally saved as full 32bit.' )
__children["RenderLayer"]["Depth_Tolerance"].setValue( 0.009999999776482582 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'spreadsheet:columnName', 'depth_toleranceValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'label', 'Depth Tolerance' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'layout:index', 33 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Depth_Tolerance"], 'description', "If the depth difference for a given sample is bigger than this, do not merge those samples. If you reduce the 'Depth Tolerance' value to zero, you will get many samples when rendering the scene and viewing it in Nuke. However, if you raise the 'Depth Tolerance' value, you are effectively creating a threshold by which the samples are merged. Any samples that fall out of this threshold difference value will be merged, and only the samples that have a larger value than the tolerance value will remain." )
__children["RenderLayer"]["Filter"].setValue( 'gaussian' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'spreadsheet:columnName', 'filterValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'label', 'Filter' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'layout:index', 34 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter"], 'description', 'Choose image filter type for deep image' )
__children["RenderLayer"]["Filter_Width"].setValue( '1.5' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'spreadsheet:columnName', 'filterwidthValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'label', 'Filter Width' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'layout:section', 'Output Settings.deep_settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'layout:index', 35 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Filter_Width"], 'description', 'filter width in pixels' )
__children["RenderLayer"]["StandardOptions"]["in"].setInput( __children["RenderLayer"]["ArnoldOptions"]["out"] )
__children["RenderLayer"]["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 1920, 1080 ) )
__children["RenderLayer"]["StandardOptions"]["options"]["resolutionMultiplier"]["enabled"].setValue( True )
__children["RenderLayer"]["StandardOptions"]["options"]["renderCropWindow"]["value"].setValue( imath.Box2f( imath.V2f( 0.0, 0.0 ), imath.V2f( 1.0, 1.0 ) ) )
__children["RenderLayer"]["StandardOptions"]["options"]["renderCropWindow"]["enabled"].setValue( False )
__children["RenderLayer"]["StandardOptions"]["options"]["transformBlur"]["value"].setValue( True )
__children["RenderLayer"]["StandardOptions"]["options"]["deformationBlur"]["value"].setValue( True )
__children["RenderLayer"]["StandardOptions"]["options"]["renderResolution"]["enabled"].setInput( __children["RenderLayer"]["options_renderResolution_enabled"] )
__children["RenderLayer"]["StandardOptions"]["options"]["resolutionMultiplier"]["value"].setInput( __children["RenderLayer"]["options_resolutionMultiplier_value"] )
__children["RenderLayer"]["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 336.786041, -119.719833 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'spreadsheet:columnName', 'resolutionMultiplierValue' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'layout:section', 'Interactive Overwrites' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'layout:index', 60 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'preset:Quarter', 0.25 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'preset:Third', 0.33329999446868896 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'preset:Half', 0.5 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'preset:Full', 1.0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'label', 'Resolution' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_resolutionMultiplier_value"], 'description', 'Choose resolutions for interactive renders.\n\nThese settings will be ignored on the farm!' )
__children["RenderLayer"]["ImageReaderCryptoMaterial"]["fileName"].setInput( __children["RenderLayer"]["Expression"]["__out"]["p1"] )
__children["RenderLayer"]["ImageReaderCryptoMaterial"]["channelInterpretation"].setValue( 2 )
__children["RenderLayer"]["ImageReaderCryptoMaterial"]["__uiPosition"].setValue( imath.V2f( 324.169922, -229.864822 ) )
__children["RenderLayer"]["ImageReaderCryptoAsset"]["fileName"].setInput( __children["RenderLayer"]["Expression"]["__out"]["p0"] )
__children["RenderLayer"]["ImageReaderCryptoAsset"]["channelInterpretation"].setValue( 2 )
__children["RenderLayer"]["ImageReaderCryptoAsset"]["__uiPosition"].setValue( imath.V2f( 362.389923, -229.864822 ) )
__children["RenderLayer"]["Merge"]["in"][0].setInput( __children["RenderLayer"]["ImageReaderCryptoMaterial"]["out"] )
__children["RenderLayer"]["Merge"]["in"][1].setInput( __children["RenderLayer"]["ImageReaderCryptoAsset"]["out"] )
__children["RenderLayer"]["Merge"]["in"][2].setInput( __children["RenderLayer"]["ImageReaderCryptoObject"]["out"] )
__children["RenderLayer"]["Merge"]["operation"].setValue( 8 )
__children["RenderLayer"]["Merge"]["__uiPosition"].setValue( imath.V2f( 305.431702, -238.028885 ) )
__children["RenderLayer"]["ImageReaderCryptoObject"]["fileName"].setInput( __children["RenderLayer"]["Expression"]["__out"]["p2"] )
__children["RenderLayer"]["ImageReaderCryptoObject"]["channelInterpretation"].setValue( 2 )
__children["RenderLayer"]["ImageReaderCryptoObject"]["__uiPosition"].setValue( imath.V2f( 386.362549, -229.864822 ) )
__children["RenderLayer"]["CopyImageMetadata"]["in"].setInput( __children["RenderLayer"]["CopyImageMetadata2"]["out"] )
__children["RenderLayer"]["CopyImageMetadata"]["copyFrom"].setInput( __children["RenderLayer"]["ImageReaderCryptoAsset"]["out"] )
__children["RenderLayer"]["CopyImageMetadata"]["__uiPosition"].setValue( imath.V2f( 345.544373, -254.357025 ) )
__children["RenderLayer"]["CopyImageMetadata1"]["in"].setInput( __children["RenderLayer"]["CopyImageMetadata"]["out"] )
__children["RenderLayer"]["CopyImageMetadata1"]["copyFrom"].setInput( __children["RenderLayer"]["ImageReaderCryptoObject"]["out"] )
__children["RenderLayer"]["CopyImageMetadata1"]["__uiPosition"].setValue( imath.V2f( 361.949982, -262.521088 ) )
__children["RenderLayer"]["CopyImageMetadata2"]["in"].setInput( __children["RenderLayer"]["Merge"]["out"] )
__children["RenderLayer"]["CopyImageMetadata2"]["copyFrom"].setInput( __children["RenderLayer"]["ImageReaderCryptoMaterial"]["out"] )
__children["RenderLayer"]["CopyImageMetadata2"]["__uiPosition"].setValue( imath.V2f( 324.169922, -246.192947 ) )
__children["RenderLayer"]["Dot90"]["in"].setInput( __children["RenderLayer"]["Dot89"]["out"] )
__children["RenderLayer"]["Dot90"]["__uiPosition"].setValue( imath.V2f( 333.786041, -63.2154999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["bypassAOVs"]["user"]["IntPlug"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["bypassAOVs"]["user"]["IntPlug"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["bypassAOVs"]["user"]["IntPlug"], 'preset:Internal interactive', 0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["bypassAOVs"]["user"]["IntPlug"], 'preset:External Interactive', 1 )
__children["RenderLayer"]["bypassAOVs"]["index"].setInput( __children["RenderLayer"]["index"] )
__children["RenderLayer"]["bypassAOVs"]["in"][0].setInput( __children["RenderLayer"]["DeleteOutputsInteractive"]["out"] )
__children["RenderLayer"]["bypassAOVs"]["in"][1].setInput( __children["RenderLayer"]["Outputs"]["out"] )
__children["RenderLayer"]["bypassAOVs"]["__uiPosition"].setValue( imath.V2f( 336.786041, -102.937874 ) )
__children["RenderLayer"]["half_res"]["user"]["shadow_half_res"].setInput( __children["RenderLayer"]["shadow_half_res"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_res"]["user"]["shadow_half_res"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_res"]["user"]["shadow_half_res"], 'description', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["half_res"]["user"]["shadow_half_res"], 'label', 'Shadow Half Res' )
__children["RenderLayer"]["half_res"]["in"].setInput( __children["RenderLayer"]["Shader"]["out"] )
__children["RenderLayer"]["half_res"]["options"]["resolutionMultiplier"]["enabled"].setValue( True )
__children["RenderLayer"]["half_res"]["options"]["resolutionMultiplier"]["value"].setInput( __children["RenderLayer"]["Expression7"]["__out"]["p0"] )
__children["RenderLayer"]["half_res"]["__uiPosition"].setValue( imath.V2f( 300.417664, 35.8045082 ) )
__children["RenderLayer"]["Expression7"]["__in"]["p0"].setInput( __children["RenderLayer"]["half_res"]["user"]["shadow_half_res"] )
__children["RenderLayer"]["Expression7"]["__uiPosition"].setValue( imath.V2f( 308.417664, 35.8036346 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'description', 'Sets the resolution of the shadow pass to half. \n\nUseful to speed up renders on non detailed shadow pass.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'label', 'Shadow Half Res' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["shadow_half_res"], 'layout:index', 3 )
__children["RenderLayer"]["Switch5"]["user"]["autoAddObjects"].setInput( __children["RenderLayer"]["user_autoAddObjects"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch5"]["user"]["autoAddObjects"], 'nodule:type', '' )
__children["RenderLayer"]["Switch5"]["index"].setInput( __children["RenderLayer"]["Expression8"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch5"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["Switch5"]["in"][0].setInput( __children["RenderLayer"]["Dot91"]["out"] )
__children["RenderLayer"]["Switch5"]["in"][1].setInput( __children["RenderLayer"]["CAMERA_VISIBILITY_ON"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Switch5"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Switch5"]["__uiPosition"].setValue( imath.V2f( 279.629028, 166.844391 ) )
__children["RenderLayer"]["Dot91"]["in"].setInput( __children["RenderLayer"]["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot91"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Dot91"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["Dot91"]["__uiPosition"].setValue( imath.V2f( 276.629028, 190.475906 ) )
__children["RenderLayer"]["Expression8"]["__in"]["p0"].setInput( __children["RenderLayer"]["Switch5"]["user"]["autoAddObjects"] )
__children["RenderLayer"]["Expression8"]["__uiPosition"].setValue( imath.V2f( 266.965759, 167.016098 ) )
__children["RenderLayer"]["user_autoAddObjects"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'layout:section', 'Render Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'label', 'Auto add Objects to Layer' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["user_autoAddObjects"], 'description', 'If checked all objects will be added to layer and cancells any selection below.' )
__children["RenderLayer"]["Dot92"]["in"].setInput( __children["RenderLayer"]["Dot90"]["out"] )
__children["RenderLayer"]["Dot92"]["__uiPosition"].setValue( imath.V2f( 354.532654, -69.7154999 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'preset:Internal', 0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'preset:New Preset', 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'label', "Bypass AOV's" )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'layout:section', 'Interactive Overwrites' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["index"], 'layout:index', 58 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["Expression"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["Expression"]["__in"]["p0"].setInput( __children["RenderLayer"]["arnold_render"]["out"]["globals"] )
__children["RenderLayer"]["Expression"]["__uiPosition"].setValue( imath.V2f( 345.05365, -241.223862 ) )
__children["RenderLayer"]["Dot93"]["in"].setInput( __children["RenderLayer"]["StandardOptions"]["out"] )
__children["RenderLayer"]["Dot93"]["__uiPosition"].setValue( imath.V2f( 383.014404, -127.051865 ) )
__children["RenderLayer"]["ImageWriterBeautySlap"]["preTasks"][0].setInput( __children["RenderLayer"]["createFolder"]["task"] )
__children["RenderLayer"]["ImageWriterBeautySlap"]["in"].setInput( __children["RenderLayer"]["SLAP"]["out"] )
__children["RenderLayer"]["ImageWriterBeautySlap"]["fileName"].setValue( '${layer_output_path}/slap/${layer_name}_${layer_type}_slap.####.exr' )
__children["RenderLayer"]["ImageWriterBeautySlap"]["colorSpace"].setValue( 'Utility - Linear - sRGB' )
__children["RenderLayer"]["ImageWriterBeautySlap"]["__uiPosition"].setValue( imath.V2f( 297.790802, -345.937897 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"], 'nodeGadget:color', imath.Color3f( 0.252925038, 0.252924979, 0.754999995 ) )
__children["RenderLayer"]["SLAP"]["__uiPosition"].setValue( imath.V2f( 314.262177, -337.605865 ) )
__children["RenderLayer"]["SLAP"]["Backdrop58"]["title"].setValue( 'SLAP' )
__children["RenderLayer"]["SLAP"]["Backdrop58"]["scale"].setValue( 2.0 )
__children["RenderLayer"]["SLAP"]["Backdrop58"]["__uiPosition"].setValue( imath.V2f( 70.5748215, 63.5524292 ) )
__children["RenderLayer"]["SLAP"]["Backdrop58"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -46.1788673, -67.5523224 ), imath.V2f( 124.26757, 61.4692993 ) ) )
__children["RenderLayer"]["SLAP"]["Merge"]["in"][0].setInput( __children["RenderLayer"]["SLAP"]["Resize_HD"]["out"] )
__children["RenderLayer"]["SLAP"]["Merge"]["in"][1].setInput( __children["RenderLayer"]["SLAP"]["Premultiply"]["out"] )
__children["RenderLayer"]["SLAP"]["Merge"]["operation"].setValue( 8 )
__children["RenderLayer"]["SLAP"]["Merge"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 66.1523438 ) )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Merge"]["out"] )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"]["inputSpace"].setValue( 'ACES - ACEScg' )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"]["outputSpace"].setValue( 'ACES - ACEScct' )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 45.1458778 ) )
__children["RenderLayer"]["SLAP"]["LUT_view"]["in"].setInput( __children["RenderLayer"]["SLAP"]["GRADE"]["out"] )
__children["RenderLayer"]["SLAP"]["LUT_view"]["fileName"].setInput( __children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__out"]["p1"] )
__children["RenderLayer"]["SLAP"]["LUT_view"]["interpolation"].setValue( 2 )
__children["RenderLayer"]["SLAP"]["LUT_view"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 21.4716797 ) )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"]["in"].setInput( __children["RenderLayer"]["SLAP"]["LUT_view"]["out"] )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"]["inputSpace"].setValue( 'ACES - ACEScct' )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"]["outputSpace"].setValue( 'ACES - ACEScg' )
__children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 5.2792325 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Backdrop56"], 'nodeGadget:color', imath.Color3f( 0.239999995, 0.239999995, 0.239999995 ) )
__children["RenderLayer"]["SLAP"]["Backdrop56"]["title"].setValue( 'source plate' )
__children["RenderLayer"]["SLAP"]["Backdrop56"]["scale"].setValue( 2.0 )
__children["RenderLayer"]["SLAP"]["Backdrop56"]["__uiPosition"].setValue( imath.V2f( 36.6773605, 96.5905151 ) )
__children["RenderLayer"]["SLAP"]["Backdrop56"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -37.2984619 ), imath.V2f( 36.5856781, 13.9140625 ) ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Backdrop57"], 'nodeGadget:color', imath.Color3f( 0.25, 0.25, 0.25 ) )
__children["RenderLayer"]["SLAP"]["Backdrop57"]["title"].setValue( 'LUT' )
__children["RenderLayer"]["SLAP"]["Backdrop57"]["scale"].setValue( 2.0 )
__children["RenderLayer"]["SLAP"]["Backdrop57"]["__uiPosition"].setValue( imath.V2f( 85.8028488, 36.616642 ) )
__children["RenderLayer"]["SLAP"]["Backdrop57"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -39.8473587 ), imath.V2f( 28.6482086, 23.328125 ) ) )
__children["RenderLayer"]["SLAP"]["roto"]["fileName"].setValue( '/job/ee/film/dto007/dto007_0010/element/2d/rotoSet01/002/4042x2274/exr/dto007_0010_rotoSet01_002.#.exr' )
__children["RenderLayer"]["SLAP"]["roto"]["__uiPosition"].setValue( imath.V2f( 149.389633, 112.489304 ) )
__children["RenderLayer"]["SLAP"]["lift_blacks"]["enabled"].setValue( False )
__children["RenderLayer"]["SLAP"]["lift_blacks"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Unpremultiply"]["out"] )
__children["RenderLayer"]["SLAP"]["lift_blacks"]["lift"].setValue( imath.Color4f( 0.0700000003, 0.0700000003, 0.0700000003, 0 ) )
__children["RenderLayer"]["SLAP"]["lift_blacks"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 91.9972534 ) )
__children["RenderLayer"]["SLAP"]["Premultiply"]["enabled"].setValue( False )
__children["RenderLayer"]["SLAP"]["Premultiply"]["in"].setInput( __children["RenderLayer"]["SLAP"]["lift_blacks"]["out"] )
__children["RenderLayer"]["SLAP"]["Premultiply"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 80.8247375 ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply"]["enabled"].setValue( False )
__children["RenderLayer"]["SLAP"]["Unpremultiply"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Resize3"]["out"] )
__children["RenderLayer"]["SLAP"]["Unpremultiply"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 101.811951 ) )
__children["RenderLayer"]["SLAP"]["Shuffle"]["in"].setInput( __children["RenderLayer"]["SLAP"]["roto"]["out"] )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel"]["in"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel1"]["in"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel2"]["in"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["channels"]["channel3"]["in"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Shuffle"]["__uiPosition"].setValue( imath.V2f( 144.582825, 97.6154938 ) )
__children["RenderLayer"]["SLAP"]["CopyChannels"]["in"][0].setInput( __children["RenderLayer"]["SLAP"]["Dot1"]["out"] )
__children["RenderLayer"]["SLAP"]["CopyChannels"]["in"][1].setInput( __children["RenderLayer"]["SLAP"]["Switch1"]["out"] )
__children["RenderLayer"]["SLAP"]["CopyChannels"]["channels"].setValue( '[A]' )
__children["RenderLayer"]["SLAP"]["CopyChannels"]["__uiPosition"].setValue( imath.V2f( 159.880844, 47.9120789 ) )
__children["RenderLayer"]["SLAP"]["bg1"]["fileName"].setValue( '/job/ee/film/dto007/dto007_0010/element/2d/animplate/comp/render/002/dto007_0010_sourceplate_bg01_002_flattened.#.png' )
__children["RenderLayer"]["SLAP"]["bg1"]["__uiPosition"].setValue( imath.V2f( 112.735466, 105.461853 ) )
__children["RenderLayer"]["SLAP"]["Resize2"]["in"].setInput( __children["RenderLayer"]["SLAP"]["bg1"]["out"] )
__children["RenderLayer"]["SLAP"]["Resize2"]["format"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Resize2"]["format"], 'formatPlugValueWidget:mode', 'standard' )
__children["RenderLayer"]["SLAP"]["Resize2"]["__uiPosition"].setValue( imath.V2f( 112.736443, 97.2977905 ) )
__children["RenderLayer"]["SLAP"]["Premultiply1"]["in"].setInput( __children["RenderLayer"]["SLAP"]["CopyChannels"]["out"] )
__children["RenderLayer"]["SLAP"]["Premultiply1"]["__uiPosition"].setValue( imath.V2f( 159.880844, 40.4117126 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Backdrop59"], 'nodeGadget:color', imath.Color3f( 0.535000026, 0.535000026, 0.535000026 ) )
__children["RenderLayer"]["SLAP"]["Backdrop59"]["title"].setValue( 'roto plate' )
__children["RenderLayer"]["SLAP"]["Backdrop59"]["__uiPosition"].setValue( imath.V2f( 145.563797, 100.049377 ) )
__children["RenderLayer"]["SLAP"]["Backdrop59"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -8.5, -12.8132324 ), imath.V2f( 14.5, 18.8132324 ) ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Backdrop60"], 'nodeGadget:color', imath.Color3f( 0.694999993, 0.694999993, 0.694999993 ) )
__children["RenderLayer"]["SLAP"]["Backdrop60"]["title"].setValue( 'clean plate' )
__children["RenderLayer"]["SLAP"]["Backdrop60"]["__uiPosition"].setValue( imath.V2f( 114.347282, 107.031677 ) )
__children["RenderLayer"]["SLAP"]["Backdrop60"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -9.87548828, -18.9000854 ), imath.V2f( 12.6999969, 10 ) ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["bg"]["user"]["connect_to_spreadsheet"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["bg"]["user"]["connect_to_spreadsheet"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["bg"]["user"]["connect_to_spreadsheet"], 'buttonPlugValueWidget:clicked', 'import GafferUI\nscriptWindow = button.ancestor( GafferUI.ScriptWindow )\t\nroot = scriptWindow.scriptNode()\nnode = plug.node()\nroot[node.getName()]["fileName"].setInput(root["RVX_SHOTLOADER"]["out"]["sourceplate"])' )
__children["RenderLayer"]["SLAP"]["bg"]["fileName"].setInput( __children["RenderLayer"]["SLAP"]["Expression"]["__out"]["p0"] )
__children["RenderLayer"]["SLAP"]["bg"]["colorSpace"].setValue( 'ACES - ACEScg' )
__children["RenderLayer"]["SLAP"]["bg"]["__uiPosition"].setValue( imath.V2f( 49.0427094, 92.3181763 ) )
__children["RenderLayer"]["SLAP"]["GRADE"]["in"].setInput( __children["RenderLayer"]["SLAP"]["ColorSpace_acescg_to_acescct"]["out"] )
__children["RenderLayer"]["SLAP"]["GRADE"]["fileName"].setInput( __children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__out"]["p0"] )
__children["RenderLayer"]["SLAP"]["GRADE"]["interpolation"].setValue( 2 )
__children["RenderLayer"]["SLAP"]["GRADE"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 34.113224 ) )
__children["RenderLayer"]["SLAP"]["Resize_HD"]["in"].setInput( __children["RenderLayer"]["SLAP"]["bg"]["out"] )
__children["RenderLayer"]["SLAP"]["Resize_HD"]["format"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Resize_HD"]["format"], 'formatPlugValueWidget:mode', 'standard' )
__children["RenderLayer"]["SLAP"]["Resize_HD"]["__uiPosition"].setValue( imath.V2f( 49.0427094, 74.3164062 ) )
__children["RenderLayer"]["SLAP"]["Resize3"]["in"].setInput( __children["RenderLayer"]["SLAP"]["beauty_aov_image1"]["out"] )
__children["RenderLayer"]["SLAP"]["Resize3"]["format"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Resize3"]["format"], 'formatPlugValueWidget:mode', 'standard' )
__children["RenderLayer"]["SLAP"]["Resize3"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 112.130035 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__uiPosition"].setValue( imath.V2f( 53.3325806, 29.6851883 ) )
__children["RenderLayer"]["SLAP"]["BoxOut"]["in"].setInput( __children["RenderLayer"]["SLAP"]["ColorSpace_acescct_to_acescg"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["SLAP"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 89.8116379, -23.6392746 ) )
__children["RenderLayer"]["SLAP"]["out"].setInput( __children["RenderLayer"]["SLAP"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out"], 'layout:index', 0 )
__children["RenderLayer"]["SLAP"]["index"].setValue( 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["index"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["index"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["index"], 'label', 'Resize To HD' )
__children["RenderLayer"]["SLAP"]["BoxOut1"]["name"].setValue( 'out_roto' )
__children["RenderLayer"]["SLAP"]["BoxOut1"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Premultiply1"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut1"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["BoxOut1"]["passThrough"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["SLAP"]["BoxOut1"]["__uiPosition"].setValue( imath.V2f( 161.380844, 17.2196178 ) )
__children["RenderLayer"]["SLAP"]["out_roto"].setInput( __children["RenderLayer"]["SLAP"]["BoxOut1"]["__out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out_roto"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["out_roto"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["SLAP"]["R"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Unpremultiply4"]["out"] )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel"]["in"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel1"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel2"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["R"]["channels"]["channel3"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["R"]["__uiPosition"].setValue( imath.V2f( 157.612595, 90.5962753 ) )
__children["RenderLayer"]["SLAP"]["G"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Unpremultiply5"]["out"] )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel"]["out"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel1"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel2"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["G"]["channels"]["channel3"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["G"]["__uiPosition"].setValue( imath.V2f( 170.267288, 90.7924728 ) )
__children["RenderLayer"]["SLAP"]["B"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Unpremultiply6"]["out"] )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel"]["out"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel1"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel2"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["RenderLayer"]["SLAP"]["B"]["channels"]["channel3"]["in"].setValue( '__black' )
__children["RenderLayer"]["SLAP"]["B"]["__uiPosition"].setValue( imath.V2f( 182.529602, 90.5962677 ) )
__children["RenderLayer"]["SLAP"]["Merge1"]["in"][0].setInput( __children["RenderLayer"]["SLAP"]["R"]["out"] )
__children["RenderLayer"]["SLAP"]["Merge1"]["in"][1].setInput( __children["RenderLayer"]["SLAP"]["G"]["out"] )
__children["RenderLayer"]["SLAP"]["Merge1"]["in"][2].setInput( __children["RenderLayer"]["SLAP"]["B"]["out"] )
__children["RenderLayer"]["SLAP"]["Merge1"]["operation"].setValue( 8 )
__children["RenderLayer"]["SLAP"]["Merge1"]["__uiPosition"].setValue( imath.V2f( 171.767288, 76.2301025 ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply4"]["in"].setInput( __children["RenderLayer"]["SLAP"]["roto"]["out"] )
__children["RenderLayer"]["SLAP"]["Unpremultiply4"]["channels"].setValue( '[RGBA]' )
__children["RenderLayer"]["SLAP"]["Unpremultiply4"]["alphaChannel"].setValue( 'R' )
__children["RenderLayer"]["SLAP"]["Unpremultiply4"]["__uiPosition"].setValue( imath.V2f( 157.612595, 104.325241 ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply5"]["in"].setInput( __children["RenderLayer"]["SLAP"]["roto"]["out"] )
__children["RenderLayer"]["SLAP"]["Unpremultiply5"]["channels"].setValue( '[RGBA]' )
__children["RenderLayer"]["SLAP"]["Unpremultiply5"]["alphaChannel"].setValue( 'G' )
__children["RenderLayer"]["SLAP"]["Unpremultiply5"]["__uiPosition"].setValue( imath.V2f( 170.267288, 104.325241 ) )
__children["RenderLayer"]["SLAP"]["Unpremultiply6"]["in"].setInput( __children["RenderLayer"]["SLAP"]["roto"]["out"] )
__children["RenderLayer"]["SLAP"]["Unpremultiply6"]["channels"].setValue( '[RGBA]' )
__children["RenderLayer"]["SLAP"]["Unpremultiply6"]["alphaChannel"].setValue( 'B' )
__children["RenderLayer"]["SLAP"]["Unpremultiply6"]["__uiPosition"].setValue( imath.V2f( 182.529602, 104.325241 ) )
__children["RenderLayer"]["SLAP"]["Resize_HD1"]["in"].setInput( __children["RenderLayer"]["SLAP"]["Merge1"]["out"] )
__children["RenderLayer"]["SLAP"]["Resize_HD1"]["format"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Resize_HD1"]["format"], 'formatPlugValueWidget:mode', 'standard' )
__children["RenderLayer"]["SLAP"]["Resize_HD1"]["__uiPosition"].setValue( imath.V2f( 185.206772, 65.9078751 ) )
__children["RenderLayer"]["SLAP"]["Switch1"]["index"].setValue( 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Switch1"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["SLAP"]["Switch1"]["in"][0].setInput( __children["RenderLayer"]["SLAP"]["Merge1"]["out"] )
__children["RenderLayer"]["SLAP"]["Switch1"]["in"][1].setInput( __children["RenderLayer"]["SLAP"]["Resize_HD1"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["SLAP"]["Switch1"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["SLAP"]["Switch1"]["__uiPosition"].setValue( imath.V2f( 174.767288, 56.0761414 ) )
__children["RenderLayer"]["SLAP"]["Dot1"]["in"].setInput( __children["RenderLayer"]["SLAP"]["bg"]["out"] )
__children["RenderLayer"]["SLAP"]["Dot1"]["__uiPosition"].setValue( imath.V2f( 156.880844, 66.984375 ) )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member1"]["name"].setValue( 'cgResX' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member2"]["name"].setValue( 'cgResY' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member3"]["name"].setValue( 'fstart' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member4"]["name"].setValue( 'fend' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member5"]["name"].setValue( 'camera_path' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member6"]["name"].setValue( 'lensdistort_path' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member7"]["name"].setValue( 'ccc_path' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member8"]["name"].setValue( 'overscan' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member9"]["name"].setValue( 'sourceplate' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member10"]["name"].setValue( 'next_version' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member11"]["name"].setValue( 'render_path' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["variables"]["member12"]["name"].setValue( 'element' )
__children["RenderLayer"]["SLAP"]["Shot_Variables"]["__uiPosition"].setValue( imath.V2f( 109.619171, 58.4492264 ) )
__children["RenderLayer"]["SLAP"]["Expression"]["__uiPosition"].setValue( imath.V2f( 38.5418434, 92.318985 ) )
__children["RenderLayer"]["SLAP"]["beauty_aov_image1"]["fileName"].setValue( '${layer_output_path}/${renderLayer}_${renderType}_v${next_version}.####.exr' )
__children["RenderLayer"]["SLAP"]["beauty_aov_image1"]["__uiPosition"].setValue( imath.V2f( 88.3116379, 134.955566 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["write_Slap_Frames"]["in"], 'noduleLayout:section', 'top' )
__children["RenderLayer"]["write_Slap_Frames"]["in"][0].setInput( __children["RenderLayer"]["SwitchWriteDeep"]["out"] )
__children["RenderLayer"]["write_Slap_Frames"]["in"][1].setInput( __children["RenderLayer"]["ImageWriterBeautySlap"]["task"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["write_Slap_Frames"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["write_Slap_Frames"]["__uiPosition"].setValue( imath.V2f( 290.220551, -359.91861 ) )
__children["RenderLayer"]["options_renderResolution_enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_renderResolution_enabled"], 'spreadsheet:columnName', 'renderResolutionEnabled' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_renderResolution_enabled"], 'layout:section', 'Interactive Overwrites' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_renderResolution_enabled"], 'layout:index', 59 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_renderResolution_enabled"], 'label', 'FORCE HD' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["options_renderResolution_enabled"], 'nodule:type', '' )
__children["RenderLayer"]["createFolder"]["preTasks"][0].setInput( __children["RenderLayer"]["SwitchWriteDeep"]["out"] )
__children["RenderLayer"]["createFolder"]["command"].setValue( 'import os\n\nenv = os.environ.copy()\nif \'LD_LIBRARY_PATH\' in env.keys():\n    del env[\'LD_LIBRARY_PATH\']\n\nslap_folder = self["variables"]["member1"]["value"].getValue()\nif not os.path.exists(slap_folder):\n\tos.makedirs(slap_folder)' )
__children["RenderLayer"]["createFolder"]["variables"]["member1"]["name"].setValue( 'slap_folder' )
__children["RenderLayer"]["createFolder"]["variables"]["member1"]["value"].setValue( '${layer_output_path}/slap' )
__children["RenderLayer"]["createFolder"]["__uiPosition"].setValue( imath.V2f( 295.59079, -331.594177 ) )
__children["RenderLayer"]["Outputs"]["in"].setInput( __children["RenderLayer"]["Dot92"]["out"] )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Arnold/Beauty' )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["RenderLayer"]["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["RenderLayer"]["Outputs"]["__uiPosition"].setValue( imath.V2f( 354.532654, -94.7738113 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["allAovs"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["allAovs"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["allAovs"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["attrConnectToLayerMenu"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["attrConnectToLayerMenu"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["attrConnectToLayerMenu"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["attrConnectToLayerMenu"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["user"]["attrConnectToLayerMenu"], 'buttonPlugValueWidget:clicked', 'node = plug.node()\n\nlayer = node.parent()\nlayerFilter = layer["fiter_type"]\nlayerFilterWidth = layer["FilterWidth"]\nlayerCompression = layer["compression"]\nlayerPrecision = layer["half_precision"]\nlayerTiled = layer["tiled"]\nlayerAutoCrop = layer["autocrop"]\nlayerPreserveName = layer["preserve_layer_name"]\nlayerMultiPart = layer["multipart"]\n\nfor n in node["outputs"]:\n\tname = n["name"].getValue()\n\t#print(name)\n\t#global connections\n\tparam = n["parameters"].values()\n\tfor p in param:\n\t\tpname = p.getName()\n\t\tif pname == "filter":\n\t\t\tn["parameters"]["filter"]["value"].setInput(layerFilter)\n\t\tif pname == "filterwidth":\n\t\t\tn["parameters"]["filterwidth"]["value"].setInput(layerFilterWidth)\n\t\tif pname == "compression":\n\t\t\tn["parameters"]["compression"]["value"].setInput(layerCompression)\n\t\tif pname == "half_precision":\n\t\t\tn["parameters"]["half_precision"]["value"].setInput(layerPrecision)\n\t\tif pname == "tiled":\n\t\t\tn["parameters"]["tiled"]["value"].setInput(layerTiled)\n\t\tif pname == "autocrop":\n\t\t\tn["parameters"]["autocrop"]["value"].setInput(layerAutoCrop)\n\t\tif pname == "preserve_layer_name":\n\t\t\tn["parameters"]["preserve_layer_name"]["value"].setInput(layerPreserveName)\n\t\tif pname == "multipart":\n\t\t\tn["parameters"]["multipart"]["value"].setInput(layerMultiPart)' )
__children["RenderLayer"]["allBatchOutputs"]["in"].setInput( __children["RenderLayer"]["prune_misc_grp"]["out"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Arnold/Beauty' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["fileName"].setValue( '${layer_output_path}/aovs/beauty/${layer_name}_${layer_type}_beauty.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["name"].setValue( 'Batch/Arnold/Direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["fileName"].setValue( '${layer_output_path}/aovs/direct/${layer_name}_${layer_type}_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["data"].setValue( 'color direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["name"].setValue( 'Batch/Arnold/Indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["fileName"].setValue( '${layer_output_path}/aovs/indirect/${layer_name}_${layer_type}_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["data"].setValue( 'color indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["name"].setValue( 'Batch/Arnold/Albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["fileName"].setValue( '${layer_output_path}/aovs/albedo/${layer_name}_${layer_type}_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["data"].setValue( 'color albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["name"].setValue( 'Batch/Arnold/Diffuse' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["fileName"].setValue( '${layer_output_path}/aovs/diffuse/${layer_name}_${layer_type}_diffuse.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["data"].setValue( 'color diffuse' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["name"].setValue( 'Batch/Arnold/Specular' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["fileName"].setValue( '${layer_output_path}/aovs/specular/${layer_name}_${layer_type}_specular.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["data"].setValue( 'color specular' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["name"].setValue( 'Batch/Arnold/Coat' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["fileName"].setValue( '${layer_output_path}/aovs/coat/${layer_name}_${layer_type}_coat.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["data"].setValue( 'color coat' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["name"].setValue( 'Batch/Arnold/Sheen' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["fileName"].setValue( '${layer_output_path}/aovs/sheen/${layer_name}_${layer_type}_sheen.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["data"].setValue( 'color sheen' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["name"].setValue( 'Batch/Arnold/Transmission' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["fileName"].setValue( '${layer_output_path}/aovs/transmission/${layer_name}_${layer_type}_transmission.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["data"].setValue( 'color transmission' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["name"].setValue( 'Batch/Arnold/Sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["fileName"].setValue( '${layer_output_path}/aovs/sss/${layer_name}_${layer_type}_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["data"].setValue( 'color sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["name"].setValue( 'Batch/Arnold/Volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["fileName"].setValue( '${layer_output_path}/aovs/volume/${layer_name}_${layer_type}_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["data"].setValue( 'color volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["name"].setValue( 'Batch/Arnold/LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["fileName"].setValue( '${layer_output_path}/aovs/lg01/${layer_name}_${layer_type}_lg01.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["data"].setValue( 'color RGBA_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["name"].setValue( 'Batch/Arnold/LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["fileName"].setValue( '${layer_output_path}/aovs/lg02/${layer_name}_${layer_type}_lg02.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["data"].setValue( 'color RGBA_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["name"].setValue( 'Batch/Arnold/LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["fileName"].setValue( '${layer_output_path}/aovs/lg03/${layer_name}_${layer_type}_lg03.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["data"].setValue( 'color RGBA_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["name"].setValue( 'Batch/Arnold/LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["fileName"].setValue( '${layer_output_path}/aovs/lg04/${layer_name}_${layer_type}_lg04.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["data"].setValue( 'color RGBA_LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["name"].setValue( 'Batch/Arnold/LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["fileName"].setValue( '${layer_output_path}/aovs/lg05/${layer_name}_${layer_type}_lg05.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["data"].setValue( 'color RGBA_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["name"].setValue( 'Batch/Arnold/LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["fileName"].setValue( '${layer_output_path}/aovs/lg06/${layer_name}_${layer_type}_lg06.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["data"].setValue( 'color RGBA_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["name"].setValue( 'Batch/Arnold/LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["fileName"].setValue( '${layer_output_path}/aovs/lg07/${layer_name}_${layer_type}_lg07.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["data"].setValue( 'color RGBA_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["name"].setValue( 'Batch/Arnold/LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["fileName"].setValue( '${layer_output_path}/aovs/lg08/${layer_name}_${layer_type}_lg08.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["data"].setValue( 'color RGBA_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["name"].setValue( 'Batch/Arnold/LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["fileName"].setValue( '${layer_output_path}/aovs/lg09/${layer_name}_${layer_type}_lg09.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["data"].setValue( 'color RGBA_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["name"].setValue( 'Batch/Arnold/LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["fileName"].setValue( '${layer_output_path}/aovs/lg10/${layer_name}_${layer_type}_lg10.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["data"].setValue( 'color RGBA_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["name"].setValue( 'Batch/Arnold/LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default/${layer_name}_${layer_type}_lg_default.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["data"].setValue( 'color RGBA_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["name"].setValue( 'Batch/Arnold/Background' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["fileName"].setValue( '${layer_output_path}/aovs/background/${layer_name}_${layer_type}_background.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["data"].setValue( 'color background' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["name"].setValue( 'Batch/Arnold/emission' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["fileName"].setValue( '${layer_output_path}/aovs/emission/${layer_name}_${layer_type}_emission.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["data"].setValue( 'color emission' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["name"].setValue( 'Batch/Arnold/emission_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["fileName"].setValue( '${layer_output_path}/aovs/emission_indirect/${layer_name}_${layer_type}_emission_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["data"].setValue( 'color emission_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["name"].setValue( 'Batch/Arnold/Motionvector' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["fileName"].setValue( '${layer_output_path}/aovs/motionvector/${layer_name}_${layer_type}_motionvector.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["data"].setValue( 'color motionvector' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["name"].setValue( 'Batch/Arnold/Shadow_Matte' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["fileName"].setValue( '${layer_output_path}/aovs/shadow_matte/${layer_name}_${layer_type}_shadow_matte.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["data"].setValue( 'color shadow_matte' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["name"].setValue( 'Batch/Arnold/Background' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["fileName"].setValue( '${layer_output_path}/aovs/background/${layer_name}_${layer_type}_background.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["data"].setValue( 'color background' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["name"].setValue( 'Batch/Arnold/Shadow' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["fileName"].setValue( '${layer_output_path}/aovs/shadow/${layer_name}_${layer_type}_shadow.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["data"].setValue( 'color shadow' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["name"].setValue( 'Batch/Arnold/Shadow_Diff' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["fileName"].setValue( '${layer_output_path}/aovs/shadow_diff/${layer_name}_${layer_type}_shadow_diff.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["data"].setValue( 'color shadow_diff' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["name"].setValue( 'Batch/Arnold/Shadow_Mask' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["fileName"].setValue( '${layer_output_path}/aovs/shadow_mask/${layer_name}_${layer_type}_shadow_mask.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["data"].setValue( 'color shadow_mask' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["name"].setValue( 'Batch/Arnold/ID01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["fileName"].setValue( '${layer_output_path}/aovs/id01/${layer_name}_${layer_type}_id01.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["data"].setValue( 'color ID01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["name"].setValue( 'Batch/Arnold/ID02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["fileName"].setValue( '${layer_output_path}/aovs/id02/${layer_name}_${layer_type}_id02.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["data"].setValue( 'color ID02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["name"].setValue( 'Batch/Arnold/ID03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["fileName"].setValue( '${layer_output_path}/aovs/id03/${layer_name}_${layer_type}_id03.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["data"].setValue( 'color ID03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["name"].setValue( 'Batch/Arnold/ID04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["fileName"].setValue( '${layer_output_path}/aovs/id04/${layer_name}_${layer_type}_id04.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["data"].setValue( 'color ID04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["name"].setValue( 'Batch/Arnold/ID05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["fileName"].setValue( '${layer_output_path}/aovs/id05/${layer_name}_${layer_type}_id05.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["data"].setValue( 'color ID05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["name"].setValue( 'Batch/Arnold/ID06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["fileName"].setValue( '${layer_output_path}/aovs/id06/${layer_name}_${layer_type}_id06.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["data"].setValue( 'color ID06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["name"].setValue( 'Batch/Arnold/ID07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["fileName"].setValue( '${layer_output_path}/aovs/id07/${layer_name}_${layer_type}_id07.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["data"].setValue( 'color ID07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["name"].setValue( 'Batch/Arnold/ID08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["fileName"].setValue( '${layer_output_path}/aovs/id08/${layer_name}_${layer_type}_id08.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["data"].setValue( 'color ID08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["name"].setValue( 'Batch/Arnold/N' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["fileName"].setValue( '${layer_output_path}/aovs/n/${layer_name}_${layer_type}_n.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["data"].setValue( 'vector N' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["filter"]["value"].setValue( 'closest' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["name"].setValue( 'Batch/Arnold/P' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["fileName"].setValue( '${layer_output_path}/aovs/p/${layer_name}_${layer_type}_p.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["data"].setValue( 'vector P' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["filter"]["value"].setValue( 'closest' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["name"].setValue( 'Batch/Arnold/Z' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["fileName"].setValue( '${layer_output_path}/aovs/z/${layer_name}_${layer_type}_z.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["data"].setValue( 'float Z' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["filter"]["value"].setValue( 'closest' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["name"].setValue( 'Batch/Arnold/UV' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["fileName"].setValue( '${layer_output_path}/aovs/uv/${layer_name}_${layer_type}_uv.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["data"].setValue( 'color UV' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["name"].setValue( 'Batch/Arnold/motionvectors' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["fileName"].setValue( '${layer_output_path}/aovs/motionvectors/${layer_name}_${layer_type}_motionvectors.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["data"].setValue( 'color motionvectors' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["name"].setValue( 'Batch/Arnold/Denoise_Albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["fileName"].setValue( '${layer_output_path}/aovs/denoise_albedo/${layer_name}_${layer_type}_denoise_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["data"].setValue( 'color denoise_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["name"].setValue( 'Batch/Arnold/Denoise_Albedo_Surfaces' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["fileName"].setValue( '${layer_output_path}/aovs/denoise_albedo_surfaces/${layer_name}_${layer_type}_denoise_albedo_surfaces.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["data"].setValue( 'lpe ((C<TD>A)|(CA)|(C<RD>A))' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["name"].setValue( 'Batch/Arnold/Denoise_Albedo_Noisy' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["fileName"].setValue( '${layer_output_path}/aovs/denoise_albedo_noisy/${layer_name}_${layer_type}_denoise_albedo_noisy.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["data"].setValue( "lpe ((C[DV]A)|(C<RS[^'coat''sheen']>A)|(C<TS[^'coat''sheen']>+DA))" )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["name"].setValue( 'Batch/Arnold/Pref' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["fileName"].setValue( '${layer_output_path}/aovs/pref/${layer_name}_${layer_type}_pref.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["data"].setValue( 'Pref vector' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["name"].setValue( 'Batch/Arnold/Raycount' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["fileName"].setValue( '${layer_output_path}/aovs/raycount/${layer_name}_${layer_type}_raycount.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["data"].setValue( 'raycount float' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["name"].setValue( 'Batch/Arnold/Nlights' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["fileName"].setValue( '${layer_output_path}/aovs/nlights/${layer_name}_${layer_type}_nlights.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["data"].setValue( 'color nlights' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["name"].setValue( 'Batch/Arnold/Cputime' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["fileName"].setValue( '${layer_output_path}/aovs/cputime/${layer_name}_${layer_type}_cputime.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["data"].setValue( 'cputime float' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["name"].setValue( 'Batch/Arnold/LG01_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_specular_direct/${layer_name}_${layer_type}_lg01_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["data"].setValue( 'color specular_direct_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["name"].setValue( 'Batch/Arnold/LG01_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_specular_indirect/${layer_name}_${layer_type}_lg01_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["data"].setValue( 'color specular_indirect_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["name"].setValue( 'Batch/Arnold/LG01_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_diffuse_direct/${layer_name}_${layer_type}_lg01_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["data"].setValue( 'color diffuse_direct_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["name"].setValue( 'Batch/Arnold/LG01_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_diffuse_indirect/${layer_name}_${layer_type}_lg01_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["data"].setValue( 'color diffuse_indirect_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["name"].setValue( 'Batch/Arnold/LG01_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_sss/${layer_name}_${layer_type}_lg01_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["data"].setValue( 'color sss_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["name"].setValue( 'Batch/Arnold/LG01_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["fileName"].setValue( '${layer_output_path}/aovs/lg01_volume/${layer_name}_${layer_type}_lg01_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["data"].setValue( 'color volume_LG01' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["name"].setValue( 'Batch/Arnold/LG02_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_specular_direct/${layer_name}_${layer_type}_lg02_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["data"].setValue( 'color specular_direct_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["name"].setValue( 'Batch/Arnold/LG02_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_specular_indirect/${layer_name}_${layer_type}_lg02_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["data"].setValue( 'color specular_indirect_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["name"].setValue( 'Batch/Arnold/LG02_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_diffuse_direct/${layer_name}_${layer_type}_lg02_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["data"].setValue( 'color diffuse_direct_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["name"].setValue( 'Batch/Arnold/LG02_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_diffuse_indirect/${layer_name}_${layer_type}_lg02_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["data"].setValue( 'color diffuse_indirect_LG_02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["name"].setValue( 'Batch/Arnold/LG02_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_sss/${layer_name}_${layer_type}_lg02_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["data"].setValue( 'color sss_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["name"].setValue( 'Batch/Arnold/LG02_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["fileName"].setValue( '${layer_output_path}/aovs/lg02_volume/${layer_name}_${layer_type}_lg02_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["data"].setValue( 'color volume_LG02' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["name"].setValue( 'Batch/Arnold/LG03_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_specular_direct/${layer_name}_${layer_type}_lg03_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["data"].setValue( 'color specular_direct_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["name"].setValue( 'Batch/Arnold/LG03_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_specular_indirect/${layer_name}_${layer_type}_lg03_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["data"].setValue( 'color specular_indirect_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["name"].setValue( 'Batch/Arnold/LG03_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_diffuse_direct/${layer_name}_${layer_type}_lg03_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["data"].setValue( 'color diffuse_direct_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["name"].setValue( 'Batch/Arnold/LG03_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_diffuse_indirect/${layer_name}_${layer_type}_lg03_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["data"].setValue( 'color diffuse_indirect_LG_03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["name"].setValue( 'Batch/Arnold/LG03_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_sss/${layer_name}_${layer_type}_lg03_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["data"].setValue( 'color sss_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["name"].setValue( 'Batch/Arnold/LG03_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["fileName"].setValue( '${layer_output_path}/aovs/lg03_volume/${layer_name}_${layer_type}_lg03_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["data"].setValue( 'color volume_LG03' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["name"].setValue( 'Batch/Arnold/LG04_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_specular_direct/${layer_name}_${layer_type}_lg04_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["data"].setValue( 'color specular_direct_LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["name"].setValue( 'Batch/Arnold/LG04_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_specular_indirect/${layer_name}_${layer_type}_lg04_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["data"].setValue( 'color specular_indirect_LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["name"].setValue( 'Batch/Arnold/LG04_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_diffuse_direct/${layer_name}_${layer_type}_lg04_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["data"].setValue( 'color diffuse_direct_LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["name"].setValue( 'Batch/Arnold/LG04_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_diffuse_indirect/${layer_name}_${layer_type}_lg04_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["data"].setValue( 'color diffuse_indirect_LG_04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["name"].setValue( 'Batch/Arnold/LG04_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_sss/${layer_name}_${layer_type}_lg04_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["data"].setValue( 'color volume_LG04' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["name"].setValue( 'Batch/Arnold/LG04_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["fileName"].setValue( '${layer_output_path}/aovs/lg04_volume/${layer_name}_${layer_type}_lg04_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["data"].setValue( "lpe CV.*<L.'LG04'>" )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["name"].setValue( 'Batch/Arnold/LG05_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_specular_direct/${layer_name}_${layer_type}_lg05_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["data"].setValue( 'color specular_direct_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["name"].setValue( 'Batch/Arnold/LG05_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_specular_indirect/${layer_name}_${layer_type}_lg05_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["data"].setValue( 'color specular_indirect_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["name"].setValue( 'Batch/Arnold/LG05_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_diffuse_direct/${layer_name}_${layer_type}_lg05_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["data"].setValue( 'color diffuse_direct_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["name"].setValue( 'Batch/Arnold/LG05_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_diffuse_indirect/${layer_name}_${layer_type}_lg05_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["data"].setValue( 'color diffuse_indirect_LG_05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["name"].setValue( 'Batch/Arnold/LG05_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_sss/${layer_name}_${layer_type}_lg05_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["data"].setValue( 'color sss_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["name"].setValue( 'Batch/Arnold/LG05_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["fileName"].setValue( '${layer_output_path}/aovs/lg05_volume/${layer_name}_${layer_type}_lg05_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["data"].setValue( 'color volume_LG05' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["name"].setValue( 'Batch/Arnold/LG06_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_specular_direct/${layer_name}_${layer_type}_lg06_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["data"].setValue( 'color specular_direct_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["name"].setValue( 'Batch/Arnold/LG06_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_specular_indirect/${layer_name}_${layer_type}_lg06_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["data"].setValue( 'color specular_indirect_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["name"].setValue( 'Batch/Arnold/LG06_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_diffuse_direct/${layer_name}_${layer_type}_lg06_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["data"].setValue( 'color diffuse_direct_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["name"].setValue( 'Batch/Arnold/LG06_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_diffuse_indirect/${layer_name}_${layer_type}_lg06_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["data"].setValue( 'color diffuse_indirect_LG_06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["name"].setValue( 'Batch/Arnold/LG06_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_sss/${layer_name}_${layer_type}_lg06_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["data"].setValue( 'color sss_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["name"].setValue( 'Batch/Arnold/LG06_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["fileName"].setValue( '${layer_output_path}/aovs/lg06_volume/${layer_name}_${layer_type}_lg06_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["data"].setValue( 'color volume_LG06' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["name"].setValue( 'Batch/Arnold/LG07_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_specular_direct/${layer_name}_${layer_type}_lg07_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["data"].setValue( 'color specular_direct_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["name"].setValue( 'Batch/Arnold/LG07_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_specular_indirect/${layer_name}_${layer_type}_lg07_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["data"].setValue( 'color specular_indirect_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["name"].setValue( 'Batch/Arnold/LG07_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_diffuse_direct/${layer_name}_${layer_type}_lg07_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["data"].setValue( 'color diffuse_direct_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["name"].setValue( 'Batch/Arnold/LG07_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_diffuse_indirect/${layer_name}_${layer_type}_lg07_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["data"].setValue( 'color diffuse_indirect_LG_07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["name"].setValue( 'Batch/Arnold/LG07_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_sss/${layer_name}_${layer_type}_lg07_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["data"].setValue( 'color sss_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["name"].setValue( 'Batch/Arnold/LG07_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["fileName"].setValue( '${layer_output_path}/aovs/lg07_volume/${layer_name}_${layer_type}_lg07_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["data"].setValue( 'color volume_LG07' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["name"].setValue( 'Batch/Arnold/LG08_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_specular_direct/${layer_name}_${layer_type}_lg08_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["data"].setValue( 'color specular_direct_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["name"].setValue( 'Batch/Arnold/LG08_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_specular_indirect/${layer_name}_${layer_type}_lg08_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["data"].setValue( 'color specular_indirect_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["name"].setValue( 'Batch/Arnold/LG08_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_diffuse_direct/${layer_name}_${layer_type}_lg08_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["data"].setValue( 'color diffuse_direct_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["name"].setValue( 'Batch/Arnold/LG08_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_diffuse_indirect/${layer_name}_${layer_type}_lg08_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["data"].setValue( 'color diffuse_indirect_LG_08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["name"].setValue( 'Batch/Arnold/LG08_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_sss/${layer_name}_${layer_type}_lg08_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["data"].setValue( 'color sss_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["name"].setValue( 'Batch/Arnold/LG08_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["fileName"].setValue( '${layer_output_path}/aovs/lg08_volume/${layer_name}_${layer_type}_lg08_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["data"].setValue( 'color volume_LG08' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["name"].setValue( 'Batch/Arnold/LG09_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_specular_direct/${layer_name}_${layer_type}_lg09_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["data"].setValue( 'color specular_direct_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["name"].setValue( 'Batch/Arnold/LG09_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_specular_indirect/${layer_name}_${layer_type}_lg09_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["data"].setValue( 'color specular_indirect_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["name"].setValue( 'Batch/Arnold/LG09_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_diffuse_direct/${layer_name}_${layer_type}_lg09_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["data"].setValue( 'color diffuse_direct_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["name"].setValue( 'Batch/Arnold/LG09_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_diffuse_indirect/${layer_name}_${layer_type}_lg09_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["data"].setValue( 'color diffuse_indirect_LG_09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["name"].setValue( 'Batch/Arnold/LG09_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_sss/${layer_name}_${layer_type}_lg09_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["data"].setValue( 'color sss_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["name"].setValue( 'Batch/Arnold/LG09_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["fileName"].setValue( '${layer_output_path}/aovs/lg09_volume/${layer_name}_${layer_type}_lg09_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["data"].setValue( 'color volume_LG09' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["name"].setValue( 'Batch/Arnold/LG10_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_specular_direct/${layer_name}_${layer_type}_lg10_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["data"].setValue( 'color specular_direct_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["name"].setValue( 'Batch/Arnold/LG10_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_specular_indirect/${layer_name}_${layer_type}_lg10_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["data"].setValue( 'color specular_indirect_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["name"].setValue( 'Batch/Arnold/LG10_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_diffuse_direct/${layer_name}_${layer_type}_lg10_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["data"].setValue( 'color diffuse_direct_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["name"].setValue( 'Batch/Arnold/LG10_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_diffuse_indirect/${layer_name}_${layer_type}_lg10_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["data"].setValue( 'color diffuse_indirect_LG_10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["name"].setValue( 'Batch/Arnold/LG10_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_sss/${layer_name}_${layer_type}_lg10_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["data"].setValue( 'color sss_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["name"].setValue( 'Batch/Arnold/LG10_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["fileName"].setValue( '${layer_output_path}/aovs/lg10_volume/${layer_name}_${layer_type}_lg10_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["data"].setValue( 'color volume_LG10' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["name"].setValue( 'Batch/Arnold/LG_default_specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_specular_direct/${layer_name}_${layer_type}_lg_default_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["data"].setValue( 'color specular_direct_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["name"].setValue( 'Batch/Arnold/LG_default_specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_specular_indirect/${layer_name}_${layer_type}_lg_default_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["data"].setValue( 'color specular_indirect_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["name"].setValue( 'Batch/Arnold/LG_default_diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_diffuse_direct/${layer_name}_${layer_type}_lg_default_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["data"].setValue( 'color diffuse_direct_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["name"].setValue( 'Batch/Arnold/LG_default_diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_diffuse_indirect/${layer_name}_${layer_type}_lg_default_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["data"].setValue( 'color diffuse_indirect_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["name"].setValue( 'Batch/Arnold/LG_default_sss' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_sss/${layer_name}_${layer_type}_lg_default_sss.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["data"].setValue( 'color sss_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["name"].setValue( 'Batch/Arnold/LG_default_volume' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["fileName"].setValue( '${layer_output_path}/aovs/lg_default_volume/${layer_name}_${layer_type}_lg_default_volume.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["data"].setValue( 'color volume_LG_default' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["name"].setValue( 'Batch/Arnold/diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["fileName"].setValue( '${layer_output_path}/aovs/diffuse_direct/${layer_name}_${layer_type}_diffuse_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["data"].setValue( 'color diffuse_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["name"].setValue( 'Batch/Arnold/diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["fileName"].setValue( '${layer_output_path}/aovs/diffuse_indirect/${layer_name}_${layer_type}_diffuse_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["data"].setValue( 'color diffuse_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["name"].setValue( 'Batch/Arnold/diffuse_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["fileName"].setValue( '${layer_output_path}/aovs/diffuse_albedo/${layer_name}_${layer_type}_diffuse_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["data"].setValue( 'color diffuse_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["name"].setValue( 'Batch/Arnold/specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["fileName"].setValue( '${layer_output_path}/aovs/specular_direct/${layer_name}_${layer_type}_specular_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["data"].setValue( 'color specular_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["name"].setValue( 'Batch/Arnold/specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["fileName"].setValue( '${layer_output_path}/aovs/specular_indirect/${layer_name}_${layer_type}_specular_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["data"].setValue( 'color specular_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["name"].setValue( 'Batch/Arnold/specular_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["fileName"].setValue( '${layer_output_path}/aovs/specular_albedo/${layer_name}_${layer_type}_specular_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["data"].setValue( 'color specular_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["name"].setValue( 'Batch/Arnold/coat_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["fileName"].setValue( '${layer_output_path}/aovs/coat_direct/${layer_name}_${layer_type}_coat_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["data"].setValue( 'color coat_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["name"].setValue( 'Batch/Arnold/coat_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["fileName"].setValue( '${layer_output_path}/aovs/coat_indirect/${layer_name}_${layer_type}_coat_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["data"].setValue( 'color coat_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["name"].setValue( 'Batch/Arnold/coat_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["fileName"].setValue( '${layer_output_path}/aovs/coat_albedo/${layer_name}_${layer_type}_coat_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["data"].setValue( 'color coat_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["name"].setValue( 'Batch/Arnold/sheen_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["fileName"].setValue( '${layer_output_path}/aovs/sheen_direct/${layer_name}_${layer_type}_sheen_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["data"].setValue( 'color sheen_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["name"].setValue( 'Batch/Arnold/sheen_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["fileName"].setValue( '${layer_output_path}/aovs/sheen_indirect/${layer_name}_${layer_type}_sheen_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["data"].setValue( 'color sheen_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["name"].setValue( 'Batch/Arnold/sheen_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["fileName"].setValue( '${layer_output_path}/aovs/sheen_albedo/${layer_name}_${layer_type}_sheen_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["data"].setValue( 'color sheen_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["name"].setValue( 'Batch/Arnold/transmission_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["fileName"].setValue( '${layer_output_path}/aovs/transmission_direct/${layer_name}_${layer_type}_transmission_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["data"].setValue( 'color transmission_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["name"].setValue( 'Batch/Arnold/transmission_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["fileName"].setValue( '${layer_output_path}/aovs/transmission_indirect/${layer_name}_${layer_type}_transmission_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["data"].setValue( 'color transmission_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["name"].setValue( 'Batch/Arnold/transmission_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["fileName"].setValue( '${layer_output_path}/aovs/transmission_albedo/${layer_name}_${layer_type}_transmission_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["data"].setValue( 'color transmission_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["name"].setValue( 'Batch/Arnold/sss_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["fileName"].setValue( '${layer_output_path}/aovs/sss_direct/${layer_name}_${layer_type}_sss_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["data"].setValue( 'color sss_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["name"].setValue( 'Batch/Arnold/Sss_Indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["fileName"].setValue( '${layer_output_path}/aovs/sss_indirect/${layer_name}_${layer_type}_sss_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["data"].setValue( 'color sss_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["name"].setValue( 'Batch/Arnold/sss_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["fileName"].setValue( '${layer_output_path}/aovs/sss_albedo/${layer_name}_${layer_type}_sss_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["data"].setValue( 'color sss_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["name"].setValue( 'Batch/Arnold/Volume_Direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["fileName"].setValue( '${layer_output_path}/aovs/volume_direct/${layer_name}_${layer_type}_volume_direct.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["data"].setValue( 'color volume_direct' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["name"].setValue( 'Batch/Arnold/Volume_Indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["fileName"].setValue( '${layer_output_path}/aovs/volume_indirect/${layer_name}_${layer_type}_volume_indirect.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["data"].setValue( 'color volume_indirect' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["name"].setValue( 'Batch/Arnold/Volume_Albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["fileName"].setValue( '${layer_output_path}/aovs/volume_albedo/${layer_name}_${layer_type}_volume_albedo.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["data"].setValue( 'color volume_albedo' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["name"].setValue( 'Batch/Arnold/deep' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["fileName"].setValue( '${layer_output_path}/aovs/deep/${layer_name}_${layer_type}_deep.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["type"].setValue( 'deepexr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["data"].setValue( 'rgba' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member1"]["name"].setValue( 'tiled' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member2"]["name"].setValue( 'subpixel_merge' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member2"]["value"].setInput(__children["RenderLayer"]["subPixelMerge"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member3"]["name"].setValue( 'use_RGB_opacity' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member3"]["value"].setInput(__children["RenderLayer"]["use_RGB_Opacity"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member4"]["name"].setValue( 'alpha_half_precision' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member4"]["value"].setInput(__children["RenderLayer"]["Alpha_Half_Precision"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member6"]["name"].setValue( 'alpha_tolerance' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member6"]["value"].setInput(__children["RenderLayer"]["Alpha_Tolerance"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member7"]["name"].setValue( 'depth_half_precision' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member7"]["value"].setInput(__children["RenderLayer"]["Depth_Half_Precision"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member8"]["name"].setValue( 'depth_tolerance' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member8"]["value"].setInput(__children["RenderLayer"]["Depth_Tolerance"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member9"]["name"].setValue( 'filter' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member9"]["value"].setInput(__children["RenderLayer"]["Filter"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member10"]["name"].setValue( 'filterwidth' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member10"]["value"].setInput(__children["RenderLayer"]["Filter_Width"])
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["name"].setValue( 'Batch/Arnold/crypto_material' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["fileName"].setValue( '${layer_output_path}/aovs/crypto_material/${layer_name}_${layer_type}_crypto_material.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["data"].setValue( 'color crypto_material' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["name"].setValue( 'Batch/Arnold/crypto_object' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["fileName"].setValue( '${layer_output_path}/aovs/crypto_object/${layer_name}_${layer_type}_crypto_object.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["data"].setValue( 'color crypto_object' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["name"].setValue( 'Batch/Arnold/crypto_asset' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["fileName"].setValue( '${layer_output_path}/aovs/crypto_asset/${layer_name}_${layer_type}_crypto_asset.####.exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["type"].setValue( 'exr' )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["data"].setValue( 'color crypto_asset' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output1"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output2"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output3"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output4"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output5"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output6"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output7"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output8"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output9"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output10"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output11"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output12"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output13"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output14"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output15"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output16"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output17"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output18"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output19"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output20"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output21"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output22"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output23"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output24"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output25"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output26"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output27"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output28"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output29"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output30"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output31"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output32"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output33"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output34"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output35"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output36"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output37"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output38"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output39"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output40"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output41"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output42"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output43"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output47"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output48"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output49"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output50"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output51"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output52"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output53"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output54"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output55"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output56"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output57"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output58"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output59"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output60"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output61"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output62"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output63"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output64"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output65"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output66"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output67"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output68"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output69"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output70"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output71"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output72"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output73"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output74"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output75"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output76"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output77"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output78"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output79"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output80"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output81"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output82"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output83"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output84"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output85"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output86"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output87"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output88"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output89"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output90"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output91"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output92"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output93"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output94"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output95"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output96"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output97"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output98"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output99"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output100"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output101"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output102"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output103"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output104"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output105"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output106"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output107"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output108"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output109"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output110"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output111"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output112"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output113"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output114"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output115"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output116"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output117"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output118"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output119"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output120"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output121"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output122"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output123"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output124"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output125"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output126"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output127"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output128"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output129"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output130"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output131"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output132"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output133"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output134"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output135"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output136"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output137"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output138"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output139"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output140"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output141"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["allBatchOutputs"]["outputs"]["output142"]["parameters"], 'readOnly', False )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output143"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output144"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["preserve_layer_name"]["value"].setInput( __children["RenderLayer"]["preserve_layer_name"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["filterwidth"]["value"].setInput( __children["RenderLayer"]["FilterWidth"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["tiled"]["value"].setInput( __children["RenderLayer"]["tiled"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["multipart"]["value"].setInput( __children["RenderLayer"]["multipart"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["half_precision"]["value"].setInput( __children["RenderLayer"]["half_precision"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["autocrop"]["value"].setInput( __children["RenderLayer"]["autocrop"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["filter"]["value"].setInput( __children["RenderLayer"]["fiter_type"] )
__children["RenderLayer"]["allBatchOutputs"]["outputs"]["output145"]["parameters"]["compression"]["value"].setInput( __children["RenderLayer"]["compression"] )
__children["RenderLayer"]["allBatchOutputs"]["__uiPosition"].setValue( imath.V2f( 278.72226, -81.2029495 ) )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["multipart"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["multipart"], 'layout:section', 'Output Settings' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["multipart"], 'layout:index', 24 )
__children["RenderLayer"]["ContextVariables_scene_path"]["variables"]["layer_output_path"]["value"].setValue( '${project:rootDirectory}/render/${script:name}/${layer_name}' )
__children["RenderLayer"]["ContextVariables_scene_path"]["in"].setInput( __children["RenderLayer"]["Dot85"]["out"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_scene_path"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_scene_path"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["ContextVariables_scene_path"]["__uiPosition"].setValue( imath.V2f( 312.565643, -120.829956 ) )
__children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"].setValue( 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"], 'preset:Beauty', 'Beauty' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"], 'preset:Shadow', 'Shadow' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["user"]["renderType"], 'preset:Utility', 'Utility' )
__children["RenderLayer"]["ContextVariables_render_path"]["variables"]["layer_output_path"]["value"].setValue( '${project:rootDirectory}/render/${script:name}/${layer_name}' )
__children["RenderLayer"]["ContextVariables_render_path"]["in"].setInput( __children["RenderLayer"]["FrameMask4"]["task"] )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["RenderLayer"]["ContextVariables_render_path"]["out"], 'noduleLayout:section', 'bottom' )
__children["RenderLayer"]["ContextVariables_render_path"]["__uiPosition"].setValue( imath.V2f( 324.217651, -399.199066 ) )
__children["RenderLayer"]["PublishTasklist"]["preTasks"][0].setInput( __children["RenderLayer"]["ContextVariables_render_vars"]["out"] )
__children["RenderLayer"]["PublishTasklist"]["dispatcher"]["deadline"]["pool"].setValue( 'none' )
__children["RenderLayer"]["PublishTasklist"]["dispatcher"]["deadline"]["secondaryPool"].setValue( 'none' )
__children["RenderLayer"]["PublishTasklist"]["dispatcher"]["deadline"]["group"].setValue( 'none' )
__children["RenderLayer"]["PublishTasklist"]["__uiPosition"].setValue( imath.V2f( 325.717651, -422.17038 ) )
__children["RenderLayer"]["FRAME_RANGES"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["FRAME_RANGES"]["__expression"].setValue( '\ncustom = parent["__in"]["p1"]\n\nif parent["__in"]["p2"] == \'layer_range\':\n\tframeStart = parent["__in"]["p3"]\n\tframeEnd = parent["__in"]["p4"]\n\tframestring = "-".join([str(frameStart),str(frameEnd)])\n\nelif parent["__in"]["p2"] == \'timeline\':\n\tframeStart = context.get("frameRange:start","1001")\n\tframeEnd = context.get("frameRange:end","1002")\n\tframestring = "-".join([str(frameStart),str(frameEnd)])\t\n\nelif parent["__in"]["p2"] in [\'first_last\', "start_end"]:\n\tframeStart = context.get("frameRange:start","1001")\n\tframeEnd = context.get("frameRange:end","1002")\n\tframestring = ",".join([str(frameStart),str(frameEnd)])\t\n\t\nif parent["__in"]["p0"] == \'custom\':\n\tframestring = custom\n\nparent["__out"]["p0"] = framestring' )
__children["RenderLayer"]["COLLECT_PATHS"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["COLLECT_PATHS"]["__expression"].setValue( 'import IECore\nimport os\n# Globals\n\n\nglobals = parent["__in"]["p0"]\n\nbeauty_outputs = [n for n in globals.keys() if n.startswith("output:Batch/") if not n.endswith("deep") if not "crypto" in str(n)]\n\noutput_beauty_aovs = {}\n\nif beauty_outputs:\n\t\n\tfor output in beauty_outputs:\n\t\t\n\t\taov_path = globals[output].getName()\t\n\t\taov_name = os.path.basename(output)\n\t\t\n\t\tif len(aov_name) != 1 and \'LG\' not in aov_name and \'ID\' not in aov_name:\n\t\t\taov_name = os.path.basename(output.lower())\n\t\t\toutput_beauty_aovs[aov_name] = aov_path\n\t\t\t\n\t\t\n\t\toutput_beauty_aovs[aov_name] = aov_path\n\t\n\t#Collect aov\n\tparent["__out"]["p0"] = IECore.StringVectorData(output_beauty_aovs.keys())\n\n\t# Contexts\n\tcurrent_aov = context.get("collect:aov",aov_name)\n\t\n\t# Reader\n\tparent["__out"]["p1"] = output_beauty_aovs[current_aov]\n\t\n\n' )
__children["RenderLayer"]["COLLECT_PATHS_"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["COLLECT_PATHS_"]["__expression"].setValue( 'import IECore\nimport os\n# Globals\n\n#globals = parent["ContextVariables"]["out"]["globals"]\nglobals = parent["__in"]["p0"]\n##############################\n#########   CRYPTO  ##########\n##############################\n\'\'\'\ncrypto_outputs = [n for n in globals.keys() if "crypto" in str(n)]\n\noutput_batch_crypto = {}\n__disconnected = 0\nif crypto_outputs:\n\t__disconnected = 1\n\tfor output in crypto_outputs:\n\t\taov_path = globals[output].getName()\n\t\t#aov_name = os.path.basename(output.lower())\n\t\taov_name = os.path.basename(output)\n\t\toutput_batch_crypto[aov_name] = aov_path\n\n\t#Collect aov\n\t__disconnected = IECore.StringVectorData(output_batch_crypto.keys())\n\t# Contexts\n\tcurrent_crypto_aov = context.get("collect:crypto",aov_name)\n\t# Reader\n\t__disconnected = output_batch_crypto[current_crypto_aov]\n\t\t\n\'\'\'\t\n#############################\n#########   DEEP  ##########\n##############################\n\n#deep = [n for n in globals.keys() if n.endswith("deep")]\ndeep = [n for n in globals.keys() if n.startswith("output:Batch/") if n.endswith("deep")]\n#parent["__out"]["p1"] = 0\noutput_batch_deep = {}\nparent["__out"]["p1"] = 0\nif deep:\n\tparent["__out"]["p1"] = 1\n\t\n\tfor output in deep:\n\t\taov_path = globals[output].getName()\n\n\t\t#if len(os.path.basename(output)) == 1:\n\t\taov_name = os.path.basename(output)\n\t\t#else:\n\t\t#\taov_name = os.path.basename(output.lower())\n\n\t\toutput_batch_deep[aov_name] = aov_path\n\n\t#Collect aov\n\tparent["__out"]["p0"] = IECore.StringVectorData(output_batch_deep.keys())\n\t\n\t# Contexts\n\tcurrent_deep_aov = context.get("collect:deep",aov_name)\n\t# Reader\n\tparent["__out"]["p2"] = output_batch_deep[current_deep_aov]\n\t\n' )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["UI_AOV_DISPLAY_HELPER"]["__expression"].setValue( '# All available AOV\nglobals_in = parent["__in"]["p1"]\naov_in = [n.split(":")[-1] for n in globals_in.keys() if n.startswith("output:Batch/")]\nparent["__out"]["p0"] = IECore.StringVectorData(aov_in)\n\n# Availabla AOV after Filtering\nglobals_out = parent["__in"]["p0"]\naov_out = [n.split("/")[-1] for n in globals_out.keys() if n.startswith("output:Batch/")]\nparent["__out"]["p1"] = IECore.StringVectorData(aov_out)' )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["COLLECT_AOV_LISTS"]["__expression"].setValue( 'default = "*/Beauty"\n\nif parent["__in"]["p2"] == True:\n\tbeauty =  parent["__in"]["p3"]\nelse:\n\tbeauty = \'\'\n\nif parent["__in"]["p4"] == True:\n\tbeauty_ind = parent["__in"]["p5"]\nelse:\n\tbeauty_ind = \'\'\n\nif parent["__in"]["p14"] == True:\n\tid = parent["__in"]["p15"]\nelse:\n\tid = \'\'\n\nif parent["__in"]["p20"] == True:\n\tutil = parent["__in"]["p21"]\nelse:\n\tutil = \'\'\n\nif parent["__in"]["p18"] == True:\n\tlightGroups = parent["__in"]["p19"]\nelse:\n\tlightGroups = \'\'\n\nif parent["__in"]["p16"] == True:\n\tlightGroupsIndirect = parent["__in"]["p17"]\nelse:\n\tlightGroupsIndirect = \'\'\n\nif parent["__in"]["p6"] == True:\n\tcustom = parent["__in"]["p7"]\nelse:\n\tcustom = \'\'\n\nif parent["__in"]["p0"] == True:\n\tbackground = parent["__in"]["p1"]\nelse:\n\tbackground = \'\'\n\nif parent["__in"]["p10"] == True:\n\tdenoise = parent["__in"]["p11"]\nelse:\n\tdenoise = \'\'\n\nif parent["__in"]["p12"] == True:\n\temission = parent["__in"]["p13"]\nelse:\n\temission = \'\'\n\t\nif parent["__in"]["p22"] == True:\n\tvolume = parent["__in"]["p23"]\nelse:\n\tvolume = \'\'\n\nif parent["__in"]["p8"] == True:\n\tdeep = parent["__in"]["p9"]\nelse:\n\tdeep = \'\'\n\nout = " ".join([default,beauty,beauty_ind,id,util,lightGroups,lightGroupsIndirect,custom,background,denoise,emission,volume,deep])\nparent["__out"]["p0"] = out' )
__children["RenderLayer"]["Expression1"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression1"]["__expression"].setValue( 'if parent["__in"]["p0"] == "Beauty":\n\tparent["__out"]["p0"] = 0\n\nif parent["__in"]["p0"] == "Shadow":\n\tparent["__out"]["p0"] = 1\n\nif parent["__in"]["p0"] == "Utility":\n\tparent["__out"]["p0"] = 2\n' )
__children["RenderLayer"]["Expression2"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression2"]["__expression"].setValue( 'if parent["__in"]["p0"] == True:\n\n\tparent["__out"]["p0"] = 1\n\t\nelse:\n\n\tparent["__out"]["p0"] = 0' )
__children["RenderLayer"]["Expression3"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression3"]["__expression"].setValue( 'parent["__out"]["p0"] = parent["__in"]["p0"]\n' )
__children["RenderLayer"]["Expression4"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression4"]["__expression"].setValue( '#parent["allBatchOutputs"]["outputs"]["output142"]["parameters"]["member1"]["value"] = False' )
__children["RenderLayer"]["Expression7"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression7"]["__expression"].setValue( 'if parent["__in"]["p0"] == True:\n\n\tparent["__out"]["p0"] = 0.5' )
__children["RenderLayer"]["Expression8"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression8"]["__expression"].setValue( 'if parent["__in"]["p0"] == True:\n\n\tparent["__out"]["p0"] = 0\n\t\nif parent["__in"]["p0"] == False:\n\n\tparent["__out"]["p0"] = 1' )
__children["RenderLayer"]["Expression"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["Expression"]["__expression"].setValue( 'import IECore\nimport os\n# Globals\n\n#globals = parent["ContextVariables"]["out"]["globals"]\nglobals = parent["__in"]["p0"]\n##############################\n#########   CRYPTO  ##########\n##############################\n\ncrypto_outputs = [n for n in globals.keys() if "crypto" in str(n) if n]\n\noutput_batch_crypto = {}\nparent["__out"]["p3"] = 0\nif crypto_outputs:\n\tparent["__out"]["p3"] = 1\n\tfor output in crypto_outputs:\n\t\taov_path = globals[output].getName()\n\t\t#aov_name = os.path.basename(output.lower())\n\t\taov_name = os.path.basename(output)\n\t\toutput_batch_crypto[aov_name] = aov_path\n\n\tparent["__out"]["p1"] = output_batch_crypto[\'crypto_material\']\n\tparent["__out"]["p0"] = output_batch_crypto[\'crypto_asset\']\n\tparent["__out"]["p2"] = output_batch_crypto[\'crypto_object\']' )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["SLAP"]["Expression_FIND_CUBE"]["__expression"].setValue( '\nimport os\na = context.get("render_path","")\nb = a.replace("element/3d","asset/ccc")\ncube = [n for n in os.listdir(b) if n.endswith(".cube")]\nd = {}\nfor c in cube:\n\td[c.split("_")[-2]] = c\n\nmaxVersion = d[max(d)]\n\nminVersion = d[min(d)]\n\nout_grade = os.path.join(b,maxVersion)\n\nout_LUT_view = os.path.join(b,minVersion)\n\nparent["__out"]["p0"] = out_grade\n\nparent["__out"]["p1"] = out_LUT_view\n' )
__children["RenderLayer"]["SLAP"]["Expression"]["__engine"].setValue( 'python' )
__children["RenderLayer"]["SLAP"]["Expression"]["__expression"].setValue( 'path = context.get("sourceplate","")\np = path.split(".")[:-1][0]+".####.exr"\nparent["__out"]["p0"] = p' )

del __children


